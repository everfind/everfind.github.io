"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[1569],{4005:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5fd84ca8",path:"/courses/webpack/micro-frontend.html",title:"构建微前端应用",lang:"zh-CN",frontmatter:{title:"构建微前端应用",description:"介绍 Webpack 中如何构建微前端应用",keywords:["Webpack"],date:"2021-01-29T00:00:00.000Z",key:27},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"Module Federation 的例子",slug:"module-federation-的例子",children:[]},{level:2,title:"添加 Webpack 配置",slug:"添加-webpack-配置",children:[]},{level:2,title:"通过 React 来实现这个应用",slug:"通过-react-来实现这个应用",children:[]},{level:2,title:"分离出引导程序（bootstrap）",slug:"分离出引导程序-bootstrap",children:[]},{level:2,title:"分离出 Header 模块",slug:"分离出-header-模块",children:[]},{level:2,title:"说明",slug:"说明",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/micro-frontend.md"}},3331:(n,s,a)=>{a.r(s),a.d(s,{default:()=>k});var p=a(6252);const t={href:"https://micro-frontends.org/",target:"_blank",rel:"noopener noreferrer"},e=(0,p.Uk)("微前端"),o=(0,p.Uk)(" 将微服务的开发理念带到了前端开发中。微前端将原来的单体应用拆分成多个子应用，每个子应用可以使用不同的技术栈开发，最终再拼合成一个整体的应用对外提供服务。"),c=(0,p.uE)('<p>从 Webpack 5 开始，Webpack 通过 Module Federation 内置了对构建微前端应用的支持。</p><h2 id="module-federation-的例子" tabindex="-1"><a class="header-anchor" href="#module-federation-的例子" aria-hidden="true">#</a> Module Federation 的例子</h2><p>我们通过下面这个例子来演示，页面的结构如下：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Hello federation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>Hello webpack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">&gt;</span></span>内容随着点击按钮的不同而变化。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="添加-webpack-配置" tabindex="-1"><a class="header-anchor" href="#添加-webpack-配置" aria-hidden="true">#</a> 添加 Webpack 配置</h2><p><strong>webpack.mf.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> mode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-nano/argv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-merge&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> parts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.parts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    entry<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mf.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    output<span class="token operator">:</span> <span class="token punctuation">{</span> publicPath<span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  parts<span class="token punctuation">.</span><span class="token function">loadJavaScript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  parts<span class="token punctuation">.</span><span class="token function">loadImages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  parts<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  parts<span class="token punctuation">.</span><span class="token function">extractCSS</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loaders<span class="token operator">:</span> <span class="token punctuation">[</span>parts<span class="token punctuation">.</span><span class="token function">tailwind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> configs <span class="token operator">=</span> <span class="token punctuation">{</span>\n  development<span class="token operator">:</span> <span class="token function">merge</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span> entry<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;webpack-plugin-serve/client&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    parts<span class="token punctuation">.</span><span class="token function">devServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  production<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> configs<span class="token punctuation">[</span>mode<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> mode <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>这个配置文件使用了一部分我们在前面章节中定义的配置。<code>.babelrc</code> 如下：</p><p><strong>.balbelrc</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n  &quot;presets&quot;: [\n    &quot;@babel/preset-react&quot;,\n    [&quot;@babel/preset-env&quot;, { &quot;modules&quot;: false }]\n  ]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>package.json</strong></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;build:mf&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wp --config webpack.mf.js --mode production&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;start:mf&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wp --config webpack.mf.js --mode development&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="通过-react-来实现这个应用" tabindex="-1"><a class="header-anchor" href="#通过-react-来实现这个应用" aria-hidden="true">#</a> 通过 React 来实现这个应用</h2><p>为了避免直接操作 DOM，我们通过 React 来实现这个应用。</p><p><strong>src/mf.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;./main.css&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello fed&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Hello webpack&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>content<span class="token punctuation">,</span> setContent<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Changes on click.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>main className<span class="token operator">=</span><span class="token string">&quot;max-w-md mx-auto space-y-8&quot;</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">&quot;text-xl&quot;</span><span class="token operator">&gt;</span>Demo<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>aside<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>ul className<span class="token operator">=</span><span class="token string">&quot;flex space-x-8&quot;</span><span class="token operator">&gt;</span>\n          <span class="token punctuation">{</span>options<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">option</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>option<span class="token punctuation">}</span><span class="token operator">&gt;</span>\n              <span class="token operator">&lt;</span>button\n                className<span class="token operator">=</span><span class="token string">&quot;rounded bg-blue-500 text-white p-2&quot;</span>\n                onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setContent</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">}</span>\n              <span class="token operator">&gt;</span>\n                <span class="token punctuation">{</span>option<span class="token punctuation">}</span>\n              <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>aside<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>article<span class="token operator">&gt;</span><span class="token punctuation">{</span>content<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>article<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">&gt;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div>',16),l=(0,p.Uk)("我们通过前面"),u=(0,p.Uk)("删除多余样式"),r=(0,p.Uk)(" 一章介绍的方法，使用 Tailwind 来美化一下页面。"),i=(0,p.uE)('<p>此时执行 <code>npm run start:mf</code>，我们点击按钮，可以发现内容会随着按钮点击发生变化。</p><h2 id="分离出引导程序-bootstrap" tabindex="-1"><a class="header-anchor" href="#分离出引导程序-bootstrap" aria-hidden="true">#</a> 分离出引导程序（bootstrap）</h2><p>我们现在将这个单体应用分割成多个模块。在实际实践中，这些模块可以被不同的团队使用不同的技术栈开发。</p><p>我们使用 Webpack 的 <code>ModuleFederationPlugin</code> 插件，同时异步加载各个模块。同时，因为我们需要动态加载不同的模块，因此需要使用一个运行时。</p><p><strong>src/bootstrap.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./mf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>我们调整一下 webpack 配置。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ModuleFederationPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>container<span class="token punctuation">;</span>\n\n<span class="token operator">...</span>\n\n<span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token comment">// entry: [path.join(__dirname, &quot;src&quot;, &quot;mf.js&quot;)],</span>\n    entry<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bootstrap.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    output<span class="token operator">:</span> <span class="token punctuation">{</span> publicPath<span class="token operator">:</span> <span class="token string">&quot;/&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n  <span class="token punctuation">{</span>\n    plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>\n        remotes<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        shared<span class="token operator">:</span> <span class="token punctuation">{</span>\n          react<span class="token operator">:</span> <span class="token punctuation">{</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;react-dom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>此时执行 <code>npm run start:mf</code>，可以看到页面与之前的一样，没有任何变化。</p><blockquote><p>如果我们不使用运行时，而是直接将 entry 指向原始模块，我们会在浏览器中看到 <code>Uncaught Error: Shared module is not available for eager consumption</code> 这样一条错误信息。</p></blockquote><p>我们现在将 header 部分分离成单独的模块，然后通过使用 module federation 来加载这个模块。</p><blockquote><p>注意上面配置文件中，<code>singleton</code> 的配置，这么做可以保证分离出来各个模块可以使用相同的 react 库。</p></blockquote><h2 id="分离出-header-模块" tabindex="-1"><a class="header-anchor" href="#分离出-header-模块" aria-hidden="true">#</a> 分离出 Header 模块</h2><p><strong>src/header.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Header</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">&quot;text-xl&quot;</span><span class="token operator">&gt;</span>Demo<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Header<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>我们现在修改应用代码，使用这个新的模块。同时，我们新加一个 <code>mf</code> 的命名空间，我们将会在 Module Federation 里来管理这个命名空间。</p><p><strong>src/mf.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">...</span>\n<span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">&quot;mf/header&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>main className<span class="token operator">=</span><span class="token string">&quot;max-w-md mx-auto space-y-8&quot;</span><span class="token operator">&gt;</span>\n      <span class="token punctuation">{</span><span class="token comment">/* &lt;h1 className=&quot;text-xl&quot;&gt;Demo&lt;/h1&gt; */</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span>Header <span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token operator">...</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">&gt;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>现在添加 federation 配置，我们定义在 <code>webpack.parts.js</code> 中。</p><p><strong>webpack.parts.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> ModuleFederationPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>container<span class="token punctuation">;</span>\n\nexports<span class="token punctuation">.</span><span class="token function-variable function">federateModule</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> name<span class="token punctuation">,</span> filename<span class="token punctuation">,</span> exposes<span class="token punctuation">,</span> remotes<span class="token punctuation">,</span> shared <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ModuleFederationPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token punctuation">,</span>\n      filename<span class="token punctuation">,</span>\n      exposes<span class="token punctuation">,</span>\n      remotes<span class="token punctuation">,</span>\n      shared<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>因为我们要构建多个模块，为了代码复用，我们通过 <code>--component</code> 来区分不同的模块构建。</p><p><strong>webpack.mf.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// const { mode } = require(&quot;webpack-nano/argv&quot;);</span>\n<span class="token comment">// const { ModuleFederationPlugin } = require(&quot;webpack&quot;).container;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> component<span class="token punctuation">,</span> mode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-nano/argv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n<span class="token comment">//  entry: [path.join(__dirname, &quot;src&quot;, &quot;bootstrap.js&quot;)],</span>\n    output<span class="token operator">:</span> <span class="token punctuation">{</span> publicPath<span class="token operator">:</span> <span class="token string">&quot;/&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token operator">...</span>\n\n  <span class="token comment">// parts.extractCSS({ loaders: [parts.tailwind()] }),</span>\n  <span class="token comment">// {</span>\n  <span class="token comment">//   plugins: [</span>\n  <span class="token comment">//     new ModuleFederationPlugin({</span>\n  <span class="token comment">//       name: &quot;app&quot;,</span>\n  <span class="token comment">//       remotes: {},</span>\n  <span class="token comment">//       shared: {</span>\n  <span class="token comment">//         react: { singleton: true },</span>\n  <span class="token comment">//         &quot;react-dom&quot;: { singleton: true },</span>\n  <span class="token comment">//       },</span>\n  <span class="token comment">//     }),</span>\n  <span class="token comment">//   ],</span>\n  <span class="token comment">// },</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> shared <span class="token operator">=</span> <span class="token punctuation">{</span>\n  react<span class="token operator">:</span> <span class="token punctuation">{</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;react-dom&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> componentConfigs <span class="token operator">=</span> <span class="token punctuation">{</span>\n  app<span class="token operator">:</span> <span class="token function">merge</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span>\n      entry<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bootstrap.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    parts<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    parts<span class="token punctuation">.</span><span class="token function">federateModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>\n      remotes<span class="token operator">:</span> <span class="token punctuation">{</span> mf<span class="token operator">:</span> <span class="token string">&quot;mf@/mf.js&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      shared<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  header<span class="token operator">:</span> <span class="token function">merge</span><span class="token punctuation">(</span>\n    <span class="token punctuation">{</span>\n      entry<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;src&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;header.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    parts<span class="token punctuation">.</span><span class="token function">federateModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;mf&quot;</span><span class="token punctuation">,</span>\n      filename<span class="token operator">:</span> <span class="token string">&quot;mf.js&quot;</span><span class="token punctuation">,</span>\n      exposes<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;./header&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src/header&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      shared<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>component<span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Missing component name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// module.exports = merge(commonConfig, configs[mode], { mode });</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span>\n  commonConfig<span class="token punctuation">,</span>\n  configs<span class="token punctuation">[</span>mode<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> mode <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  componentConfigs<span class="token punctuation">[</span>component<span class="token punctuation">]</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br></div></div><p>执行 <code>npm run build:mf -- --component header</code> 来构建 header 模块，执行 <code>npm run start:mf -- --component app</code> 来构建 app 模块。</p><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2><p>引入 Module Federation 以后，Webpack 配置变得复杂了。但是，我们把应用拆成了多个可以独立开发独立部署的模块。每个模块都可以使用不同的技术进行开发。</p><p>Module Federation 需要有一个运行时来加载不同的模块，我们需要花费一些精力还思考如何实现这个运行时。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Webpack 5 中的 Module Federation 从基础设施层面为微前端开发提供了工具支持。</p><p><code>ModuleFederationPlugin</code> 是 Module Federation 的具体技术实现。</p><p>如果我们要在项目中使用 Module Federation，我们需要将异步加载入口模块。</p><p>使用 Module Federation 是的配置变得复杂，但是可以将模块做解耦，方便多团队协作。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',34),k={render:function(n,s){const a=(0,p.up)("OutboundLink"),k=(0,p.up)("RouterLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[(0,p.Wm)("p",null,[(0,p.Wm)("a",t,[e,(0,p.Wm)(a)]),o]),c,(0,p.Wm)("p",null,[l,(0,p.Wm)(k,{to:"/courses/webpack/remove-css.html"},{default:(0,p.w5)((()=>[u])),_:1}),r]),i],64)}}}}]);