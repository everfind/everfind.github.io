"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[7379],{9127:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1f085a99",path:"/courses/webpack/autoprefixer.html",title:"给样式自动添加浏览器前缀",lang:"zh-CN",frontmatter:{title:"给样式自动添加浏览器前缀",description:"介绍 Webpack 如何给样式自动添加浏览器前缀",keywords:["Webpack"],date:"2021-01-10T00:00:00.000Z",key:8},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"设置自动添加前缀",slug:"设置自动添加前缀",children:[]},{level:2,title:"定义需要支持的浏览器列表",slug:"定义需要支持的浏览器列表",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/autoprefixer.md"}},7472:(n,s,a)=>{a.r(s),a.d(s,{default:()=>y});var e=a(6252);const t=(0,e.Uk)("由于浏览器的原因，很多样式在不同浏览器上都会有一些特殊前缀。我们可以通过 PostCSS 和 "),p={href:"https://www.npmjs.com/package/autoprefixer",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("autoprefixer"),r=(0,e.Uk)(" 插件来实现自动添加前缀. autoprefixer 利用了 "),c={href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("Can I Use"),i=(0,e.Uk)(" 这个服务来获取各种样式规则对应的前缀信息。"),u=(0,e.uE)('<h2 id="设置自动添加前缀" tabindex="-1"><a class="header-anchor" href="#设置自动添加前缀" aria-hidden="true">#</a> 设置自动添加前缀</h2><p>安装 postcss-loader 和 autoprefixer，</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">add</span> postcss-loader autoprefixer --develop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>添加配置：</p><p><strong>webpack.parts.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>exports<span class="token punctuation">.</span><span class="token function-variable function">autoprefix</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  loader<span class="token operator">:</span> <span class="token string">&#39;postcss-loader&#39;</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> <span class="token punctuation">{</span>\n    postcssOptions<span class="token operator">:</span> <span class="token punctuation">{</span> plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;autoprefixer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>webpack.config.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// const cssLoaders = [parts.tailwind()]</span>\n<span class="token keyword">const</span> cssLoaders <span class="token operator">=</span> <span class="token punctuation">[</span>parts<span class="token punctuation">.</span><span class="token function">autoprefix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parts<span class="token punctuation">.</span><span class="token function">tailwind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="定义需要支持的浏览器列表" tabindex="-1"><a class="header-anchor" href="#定义需要支持的浏览器列表" aria-hidden="true">#</a> 定义需要支持的浏览器列表</h2>',9),d=(0,e.Uk)("autoprefixer 需要一个 "),k={href:"https://www.npmjs.com/package/browserslist",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("browserslist"),g=(0,e.Uk)(" 定义来知道需要支持哪些浏览器。"),m=(0,e.uE)('<p>在项目中添加一个 <code>.browserslistrc</code> 文件，autoprefixer 会读取这个文件。</p><p><strong>.browserslistrc</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&gt; 1% # Browser usage over 1%\nLast 2 versions # Or last two versions\nIE 8 # Or IE 8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>现在执行构建，<code>npm run build</code>, 查看构建输出结果，我们可以看到样式类已经支持了一些老旧浏览器了。</p>',4),h=(0,e.Uk)("我们可以通过 "),x={href:"http://stylelint.io/",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("Stylelint"),v=(0,e.Uk)(" 来给样式文件添加 lint 规则。设置方式与 autoprefixer 相同。"),w=(0,e.uE)('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>自动添加前缀极大的简化了我们的样式开发工作，我们可以通过 <code>.browserslistrc</code> 文件来指定需要支持的浏览器。</p><p>我们通过 autoprefixer 这个 PostCSS 插件来实现自动添加前缀。</p><p>通过 <code>.browserslistrc</code> 来指定需要支持的浏览器版本。</p><p><code>.browserslistrc</code> 是一个标准文件，除了 autoprefixer 以外，很多其他工具也支持通过这个文件读取支持的浏览器信息。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',6),y={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[(0,e.Wm)("p",null,[t,(0,e.Wm)("a",p,[o,(0,e.Wm)(a)]),r,(0,e.Wm)("a",c,[l,(0,e.Wm)(a)]),i]),u,(0,e.Wm)("p",null,[d,(0,e.Wm)("a",k,[b,(0,e.Wm)(a)]),g]),m,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[h,(0,e.Wm)("a",x,[f,(0,e.Wm)(a)]),v])]),w],64)}}}}]);