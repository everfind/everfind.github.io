"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[8541],{1603:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-ed77765a",path:"/courses/webpack/runtime.html",title:"独立输出运行时（runtime）文件",lang:"zh-CN",frontmatter:{title:"独立输出运行时（runtime）文件",description:"介绍 Webpack 中如何 独立输出运行时（runtime）文件",keywords:["Webpack"],date:"2021-01-23T00:00:00.000Z",key:21},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"导出运行时文件",slug:"导出运行时文件",children:[]},{level:2,title:"使用构建历史（records）",slug:"使用构建历史-records",children:[]},{level:2,title:"与其他工具集成",slug:"与其他工具集成",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/runtime.md"}},5081:(n,s,e)=>{e.r(s),e.d(s,{default:()=>j});var a=e(6252);const t=(0,a.Wm)("p",null,"当 Webpack 在输出 bundle 文件的时候，它同时还维护了一个运行时。这个运行时包含一个要加载的文件的清单。当文件内容发生变化的时候，这个文件清单也会发生变化，因此我们需要将这个运行时也单独输出到独立的文件中。",-1),p=(0,a.Wm)("h2",{id:"导出运行时文件",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#导出运行时文件","aria-hidden":"true"},"#"),(0,a.Uk)(" 导出运行时文件")],-1),c=(0,a.Uk)("在 "),i=(0,a.Uk)("Bundle Spliting"),o=(0,a.Uk)(" 一章中我们已经交代了巨大部分输出 bundle 的配置，这里我们需要通过 "),l=(0,a.Wm)("code",null,"optimization.runtimeChunk",-1),r=(0,a.Uk)(" 来输出运行时。"),u=(0,a.uE)('<p><strong>webpack.config.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> productionConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token operator">...</span>\n  <span class="token comment">// { optimization: { splitChunks: { chunks: &quot;all&quot; } } },</span>\n  <span class="token punctuation">{</span>\n    optimization<span class="token operator">:</span> <span class="token punctuation">{</span>\n      splitChunks<span class="token operator">:</span> <span class="token punctuation">{</span> chunks<span class="token operator">:</span> <span class="token string">&quot;all&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      runtimeChunk<span class="token operator">:</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;runtime&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>runtime</code> 这个名称是默认值，我们可以指定任何其他的名称。</p><p>此时执行 <code>npm run build</code>，可以看到输出结果为：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>⬡ webpack: Build Finished\n⬡ webpack: assets by path *.js 130 KiB\n    asset 935.a25ff4285adcf5d835fd.js 126 KiB [emitted] [immutable] [minimized] (id hint: vendors) 2 related assets\n    asset runtime.73d14ef014bf8bb2c12f.js 3.12 KiB [emitted] [immutable] [minimized] (name: runtime) 1 related asset\n    asset main.be57b34b7c7a29bc1280.js 479 bytes [emitted] [immutable] [minimized] (name: main) 1 related asset\n    asset 958.1752e720e564a63a9d5f.js 204 bytes [emitted] [immutable] [minimized] 1 related asset\n  asset main.dd02bdb46b234aa6a450.css 1.37 KiB [emitted] [immutable] [minimized] (name: main)\n  asset index.html 377 bytes [emitted]\n  Entrypoint main 131 KiB (182 KiB) = runtime.73d14ef014bf8bb2c12f.js 3.12 KiB 935.a25ff4285adcf5d835fd.js 126 KiB main.dd02bdb46b234aa6a450.css 1.37 KiB main.be57b34b7c7a29bc1280.js 479 bytes 3 auxiliary assets\n  runtime modules 7.95 KiB 10 modules\n  orphan modules 465 bytes [orphan] 2 modules\n  code generated modules 133 KiB (javascript) 4.18 MiB (css/mini-extract) [code generated]\n    modules by path ./node_modules/ 133 KiB\n      modules by path ./node_modules/react/ 6.48 KiB 2 modules\n      modules by path ./node_modules/react-dom/ 119 KiB 2 modules\n      modules by path ./node_modules/scheduler/ 4.91 KiB\n        ./node_modules/scheduler/index.js 198 bytes [built] [code generated]\n        ./node_modules/scheduler/cjs/scheduler.production.min.js 4.72 KiB [built] [code generated]\n      ./node_modules/object-assign/index.js 2.06 KiB [built] [code generated]\n    modules by path ./src/ 633 bytes (javascript) 4.18 MiB (css/mini-extract)\n      ./src/index.js + 2 modules 600 bytes [built] [code generated]\n      css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[3]!./src/main.css 4.18 MiB [code generated]\n      ./src/lazy.js 33 bytes [built] [code generated]\n  webpack 5.11.1 compiled successfully in 20891 ms\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>根据上面的配置，运行时被输出到了 runtime 这个文件中。因为我们使用了 <code>MiniHtmlWebpackPlugin</code> 这个插件，它会自动将运行时文件更新到 html 中，无需我们手动处理。</p><p>从 Webpack 5 开始，会根据项目的 <code>.browserslist</code> 文件定义的浏览器信息和 <code>target</code> 来输出运行时文件。如果 <code>target</code> 设置的 <code>es5</code>，则会输出一个兼容 ECMAScript 5 的文件，如果设置的是 <code>es2015</code> 则会输出使用较新语法的文件。</p><h2 id="使用构建历史-records" tabindex="-1"><a class="header-anchor" href="#使用构建历史-records" aria-hidden="true">#</a> 使用构建历史（records）</h2><p>在前面章节中提到 <code>AggressiveSplittingPlugin</code>，这个插件会使用 <code>record</code> 来做缓存，从而加快构建性能。</p><p>record 用来缓存不同构建之间的模块 id 的。我们使用 <code>records.json</code> 这个文件来保存模块 id。</p><p><strong>webpack.config.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">...</span>\n<span class="token keyword">const</span> productionConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token operator">...</span>\n  <span class="token punctuation">{</span> recordsPath<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;records.json&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>此时执行 <code>npm run build</code>，可以看到在项目跟目录下多了一个 <code>records.json</code> 文件，下次 Webpack 在构建的时候会读取这个文件。</p><blockquote><p><code>recordsInputPath</code> 和 <code>recordsOutputPath</code> 提供了更加细粒度的控制。</p></blockquote><h2 id="与其他工具集成" tabindex="-1"><a class="header-anchor" href="#与其他工具集成" aria-hidden="true">#</a> 与其他工具集成</h2>',15),d=(0,a.Uk)("有时候我们需要将输出资源与其他工具集成。"),m={href:"https://www.npmjs.com/package/webpack-manifest-plugin",target:"_blank",rel:"noopener noreferrer"},b=(0,a.Uk)("webpack-manifest-plugin"),k=(0,a.Uk)(" 和 "),g={href:"https://www.npmjs.com/package/webpack-assets-manifest",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("webpack-assets-manifest"),f=(0,a.Uk)(" 可以提供一些帮助。这两个插件都输出一个 JSON 文件，里面包含文件路径的映射关系。"),y=(0,a.uE)('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>Webpack 构件过程中有一个运行时，这个运行时包含了运行应用的启动信息。</p><p>一些插件可以帮助我们将运行时更新到 <code>index.html</code> 中，同时还可以输出 JSON 信息，这在服务端渲染等场景下非常有用。</p><p>构建记录 record 可以缓存不同次构建间的模块 ID 信息。缺点是我们需要额外存储这个文件。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',5),j={render:function(n,s){const e=(0,a.up)("RouterLink"),j=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[t,p,(0,a.Wm)("p",null,[c,(0,a.Wm)(e,{to:"/courses/webpack/bundle-split.html"},{default:(0,a.w5)((()=>[i])),_:1}),o,l,r]),u,(0,a.Wm)("p",null,[d,(0,a.Wm)("a",m,[b,(0,a.Wm)(j)]),k,(0,a.Wm)("a",g,[h,(0,a.Wm)(j)]),f]),y],64)}}}}]);