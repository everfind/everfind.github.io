"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[428],{3716:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-1e729ae0",path:"/courses/architecture-of-react-app/components-and-styling.html",title:"组件和样式",lang:"zh-CN",frontmatter:{title:"组件和样式",description:"应用中组件开发的最佳实践，以及优秀的组件库，样式解决方案介绍。",keywords:["React","架构","组件","样式"],date:"2021-08-10T00:00:00.000Z",key:3},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"组件开发最佳实践",slug:"组件开发最佳实践",children:[{level:3,title:"把代码都收敛在使用它的地方",slug:"把代码都收敛在使用它的地方",children:[]},{level:3,title:"避免嵌套的渲染函数",slug:"避免嵌套的渲染函数",children:[]},{level:3,title:"保持风格统一",slug:"保持风格统一",children:[]},{level:3,title:"限制组件的 props 数量",slug:"限制组件的-props-数量",children:[]},{level:3,title:"对公共组件进行一定程度的抽象",slug:"对公共组件进行一定程度的抽象",children:[]}]},{level:2,title:"组件库",slug:"组件库",children:[{level:3,title:"功能齐全的组件库",slug:"功能齐全的组件库",children:[]},{level:3,title:"无头组件库",slug:"无头组件库",children:[]}]},{level:2,title:"样式库",slug:"样式库",children:[]},{level:2,title:"样式与组件的组合",slug:"样式与组件的组合",children:[]},{level:2,title:"使用 Storybook 开发组件",slug:"使用-storybook-开发组件",children:[]}],filePathRelative:"courses/architecture-of-react-app/components-and-styling.md"}},8995:(n,e,a)=>{a.r(e),a.d(e,{default:()=>vn});var s=a(6252);const t=(0,s.uE)('<p>今天我们来聊聊项目中开发组件的一些优秀实践，同时也介绍一些优秀的组件库和样式库。</p><h2 id="组件开发最佳实践" tabindex="-1"><a class="header-anchor" href="#组件开发最佳实践" aria-hidden="true">#</a> 组件开发最佳实践</h2><h3 id="把代码都收敛在使用它的地方" tabindex="-1"><a class="header-anchor" href="#把代码都收敛在使用它的地方" aria-hidden="true">#</a> 把代码都收敛在使用它的地方</h3><p>将组件、函数、样式、状态等都尽可能的收敛在使用这些代码的地方。不要放到其他地方引起混乱。</p><p>比如组件的样式代码应该与组件代码放到一个目录下，而不是放到一个其他的样式目录中去。</p><h3 id="避免嵌套的渲染函数" tabindex="-1"><a class="header-anchor" href="#避免嵌套的渲染函数" aria-hidden="true">#</a> 避免嵌套的渲染函数</h3><div class="language-tsx ext-tsx line-numbers-mode"><pre class="language-tsx"><code><span class="token comment">// 当组件功能越来越复杂的时候，这种方式会让组件越来越难以维护</span>\n<span class="token keyword">function</span> <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">renderItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token function">renderItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 可以将其抽成独立组件</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Items <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;components/Items&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Items</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="保持风格统一" tabindex="-1"><a class="header-anchor" href="#保持风格统一" aria-hidden="true">#</a> 保持风格统一</h3><p>保持编码风格统一。比如组件的命名是驼峰式，则其他地方也是用驼峰式命名。如果是用箭头函数来创建组件，则其他地方也保持一致。</p><h3 id="限制组件的-props-数量" tabindex="-1"><a class="header-anchor" href="#限制组件的-props-数量" aria-hidden="true">#</a> 限制组件的 props 数量</h3><p>如果组件需要接收的 props 太多，我们应该考虑将其拆分成多个组件，或者是用 <code>children</code> 或者插槽等方式来组合功能。</p>',11),r={href:"https://github.com/everfind/bulletproof-react/blob/master/src/components/Elements/ConfirmationDialog/ConfirmationDialog.tsx",target:"_blank",rel:"noopener noreferrer"},l=(0,s.Uk)("这里是一个如何使用组合的代码样例"),o=(0,s.Wm)("h3",{id:"对公共组件进行一定程度的抽象",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#对公共组件进行一定程度的抽象","aria-hidden":"true"},"#"),(0,s.Uk)(" 对公共组件进行一定程度的抽象")],-1),p=(0,s.Wm)("p",null,"对于大项目来说，对公共组件进行抽象是一个必要的组件开发方式。经过抽象后的组件可以让应用代码更利于维护。不过，在对组件进行抽象之前，需要明确哪些代码是重复的，以避免错误的抽象。",-1),i={href:"https://github.com/everfind/bulletproof-react/blob/master/src/components/Elements/Button/Button.tsx",target:"_blank",rel:"noopener noreferrer"},c=(0,s.Uk)("这里是一个对组件进行抽象的代码样例"),u=(0,s.Wm)("p",null,[(0,s.Uk)("除了抽象组件以外，我们也要对一些依赖的第三方库进行必要的包装，让其能更好的适配应用的需要。比如对 "),(0,s.Wm)("code",null,"axios"),(0,s.Uk)(" 库进行一些包装，来让应用使用 "),(0,s.Wm)("code",null,"axios"),(0,s.Uk)(" 时更加简便。这么做也能保障后续对三方库进行修改或者替换三方库的时候对应用影响最小。")],-1),m={href:"https://github.com/everfind/bulletproof-react/blob/master/src/components/Elements/Link/Link.tsx",target:"_blank",rel:"noopener noreferrer"},k=(0,s.Uk)("这里是一个封装第三方库的代码样例"),h=(0,s.Wm)("h2",{id:"组件库",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#组件库","aria-hidden":"true"},"#"),(0,s.Uk)(" 组件库")],-1),d=(0,s.Wm)("p",null,"通常我们在开发应用的时候都需要一些组件库来辅助开发。这里有一些社区里久经考验的组件库可以参考。",-1),b=(0,s.Wm)("h3",{id:"功能齐全的组件库",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#功能齐全的组件库","aria-hidden":"true"},"#"),(0,s.Uk)(" 功能齐全的组件库")],-1),g={href:"https://chakra-ui.com/",target:"_blank",rel:"noopener noreferrer"},W=(0,s.Uk)("Chakra UI"),f=(0,s.Uk)(" 非常灵活，可以帮助快速开发产品原型，同时具有良好的可访问特性。"),x={href:"https://ant.design/",target:"_blank",rel:"noopener noreferrer"},U=(0,s.Uk)("AntD"),y=(0,s.Uk)(" 组件非常丰富，非常适合用来开发后台管理系统。"),v={href:"https://material-ui.com/",target:"_blank",rel:"noopener noreferrer"},w=(0,s.Uk)("Material UI"),_=(0,s.Uk)(" 也是一款适合用来开发后台管理系统的组件库，组件丰富。"),I=(0,s.Wm)("h3",{id:"无头组件库",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#无头组件库","aria-hidden":"true"},"#"),(0,s.Uk)(" 无头组件库")],-1),C=(0,s.Wm)("p",null,"有时候我们需要自由的定制组件样式，同时也要完备的组件功能，那么可以试试无头组件库。所谓无头组件就是只有交互功能，没有样式的组件。样式需要开发者自己开发。",-1),j={href:"https://reakit.io/",target:"_blank",rel:"noopener noreferrer"},S=(0,s.Uk)("Reakit"),E={href:"https://headlessui.dev/",target:"_blank",rel:"noopener noreferrer"},R=(0,s.Uk)("Headless UI"),B={href:"https://www.radix-ui.com/",target:"_blank",rel:"noopener noreferrer"},D=(0,s.Uk)("Radix UI"),H={href:"https://react-spectrum.adobe.com/react-aria/",target:"_blank",rel:"noopener noreferrer"},L=(0,s.Uk)("react-aria"),q=(0,s.Wm)("h2",{id:"样式库",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#样式库","aria-hidden":"true"},"#"),(0,s.Uk)(" 样式库")],-1),z=(0,s.Wm)("p",null,"我们有很多种方案来给组件添加样式，下面这几个是比较优秀的社区方案：",-1),A={href:"https://tailwindcss.com/",target:"_blank",rel:"noopener noreferrer"},M=(0,s.Uk)("tailwind"),N={href:"https://styled-components.com/",target:"_blank",rel:"noopener noreferrer"},O=(0,s.Uk)("styled-components"),P={href:"https://emotion.sh/docs/introduction",target:"_blank",rel:"noopener noreferrer"},T=(0,s.Uk)("emotion"),Y={href:"https://stitches.dev/",target:"_blank",rel:"noopener noreferrer"},Z=(0,s.Uk)("stitches"),F={href:"https://github.com/seek-oss/vanilla-extract",target:"_blank",rel:"noopener noreferrer"},G=(0,s.Uk)("vanilla-extract"),J={href:"https://github.com/css-modules/css-modules",target:"_blank",rel:"noopener noreferrer"},K=(0,s.Uk)("CSS modules"),Q={href:"https://github.com/callstack/linaria",target:"_blank",rel:"noopener noreferrer"},V=(0,s.Uk)("linaria"),X=(0,s.Wm)("h2",{id:"样式与组件的组合",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#样式与组件的组合","aria-hidden":"true"},"#"),(0,s.Uk)(" 样式与组件的组合")],-1),$=(0,s.Wm)("p",null,"下面这几个组合是经过社区实践后证明的比较好的组合方案。",-1),nn={href:"https://chakra-ui.com/",target:"_blank",rel:"noopener noreferrer"},en=(0,s.Uk)("Chakra UI"),an=(0,s.Uk)(" + "),sn={href:"https://emotion.sh/docs/introduction",target:"_blank",rel:"noopener noreferrer"},tn=(0,s.Uk)("emotion"),rn={href:"https://headlessui.dev/",target:"_blank",rel:"noopener noreferrer"},ln=(0,s.Uk)("Headless UI"),on=(0,s.Uk)(" + "),pn={href:"https://tailwindcss.com/",target:"_blank",rel:"noopener noreferrer"},cn=(0,s.Uk)("tailwind"),un={href:"https://www.radix-ui.com/",target:"_blank",rel:"noopener noreferrer"},mn=(0,s.Uk)("Radix UI"),kn=(0,s.Uk)(" + "),hn={href:"https://stitches.dev/",target:"_blank",rel:"noopener noreferrer"},dn=(0,s.Uk)("stitches"),bn=(0,s.Wm)("h2",{id:"使用-storybook-开发组件",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#使用-storybook-开发组件","aria-hidden":"true"},"#"),(0,s.Uk)(" 使用 Storybook 开发组件")],-1),gn={href:"https://storybook.js.org/",target:"_blank",rel:"noopener noreferrer"},Wn=(0,s.Uk)("Storybook"),fn=(0,s.Uk)(" 是一款非常优秀的组件开发工具。我们可以将其当做应用内组件的目录，当应用规模比较大的时候，使用 Storybook 可以非常方面的查看组件信息。"),xn={href:"https://github.com/everfind/bulletproof-react/blob/master/src/components/Elements/Button/Button.stories.tsx",target:"_blank",rel:"noopener noreferrer"},Un=(0,s.Uk)("这里是使用 Storybook 的代码样例"),yn=(0,s.uE)('<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',1),vn={render:function(n,e){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[t,(0,s.Wm)("p",null,[(0,s.Wm)("a",r,[l,(0,s.Wm)(a)])]),o,p,(0,s.Wm)("p",null,[(0,s.Wm)("a",i,[c,(0,s.Wm)(a)])]),u,(0,s.Wm)("p",null,[(0,s.Wm)("a",m,[k,(0,s.Wm)(a)])]),h,d,b,(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",g,[W,(0,s.Wm)(a)]),f]),(0,s.Wm)("li",null,[(0,s.Wm)("a",x,[U,(0,s.Wm)(a)]),y]),(0,s.Wm)("li",null,[(0,s.Wm)("a",v,[w,(0,s.Wm)(a)]),_])]),I,C,(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",j,[S,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",E,[R,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",B,[D,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",H,[L,(0,s.Wm)(a)])])]),q,z,(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",A,[M,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",N,[O,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",P,[T,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",Y,[Z,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",F,[G,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",J,[K,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",Q,[V,(0,s.Wm)(a)])])]),X,$,(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",nn,[en,(0,s.Wm)(a)]),an,(0,s.Wm)("a",sn,[tn,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",rn,[ln,(0,s.Wm)(a)]),on,(0,s.Wm)("a",pn,[cn,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",un,[mn,(0,s.Wm)(a)]),kn,(0,s.Wm)("a",hn,[dn,(0,s.Wm)(a)])])]),bn,(0,s.Wm)("p",null,[(0,s.Wm)("a",gn,[Wn,(0,s.Wm)(a)]),fn]),(0,s.Wm)("p",null,[(0,s.Wm)("a",xn,[Un,(0,s.Wm)(a)])]),yn],64)}}}}]);