"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[2579],{2420:(e,r,t)=>{t.r(r),t.d(r,{data:()=>a});const a={key:"v-441bc8e7",path:"/courses/architecture-of-react-app/api.html",title:"API 层最佳实践",lang:"zh-CN",frontmatter:{title:"API 层最佳实践",description:"任何页面都需要调用 API 接口，本篇介绍一些 API 层的实践经验。",keywords:["React","架构","API"],date:"2021-08-11T00:00:00.000Z",key:5},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"使用单例模式",slug:"使用单例模式",children:[]},{level:2,title:"独立定义接口调用",slug:"独立定义接口调用",children:[]}],filePathRelative:"courses/architecture-of-react-app/api.md"}},4420:(e,r,t)=>{t.r(r),t.d(r,{default:()=>G});var a=t(6252);const l=(0,a.Wm)("h2",{id:"使用单例模式",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#使用单例模式","aria-hidden":"true"},"#"),(0,a.Uk)(" 使用单例模式")],-1),o=(0,a.Uk)("只使用全局一个实例。不管是调用 RESTful 风格还是 GraphQL 的 API 接口，在整个应用层面，我们都应该只使用一个客户端实例。也就是说，只使用一个配置好的 API 客户端（"),n={href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("axios"),p=(0,a.Uk)("/"),c={href:"https://github.com/prisma-labs/graphql-request",target:"_blank",rel:"noopener noreferrer"},s=(0,a.Uk)("graphql-request"),h=(0,a.Uk)("/"),m={href:"https://www.apollographql.com/docs/react/",target:"_blank",rel:"noopener noreferrer"},u=(0,a.Uk)("apollo-client"),d=(0,a.Uk)("）实例。"),g={href:"https://github.com/everfind/bulletproof-react/blob/master/src/lib/axios.ts",target:"_blank",rel:"noopener noreferrer"},f=(0,a.Uk)("这里有一个 API 客户端配置样例"),k=(0,a.Wm)("h2",{id:"独立定义接口调用",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#独立定义接口调用","aria-hidden":"true"},"#"),(0,a.Uk)(" 独立定义接口调用")],-1),b=(0,a.Wm)("p",null,"我们应该将对 API 接口的调用和类型声明从业务代码中抽取出来，放到独立的文件或模块中。",-1),W=(0,a.Uk)("如果调用的 API 是一个 RESTful 风格的，那么抽取出来的定义应该是一个调用函数，这个函数里调用具体的 API。如果调用的 API 是一个 GraphQL API，那么抽取出来的定义应该是包含了 "),x=(0,a.Wm)("code",null,"Query",-1),y=(0,a.Uk)(" 或者 "),U=(0,a.Wm)("code",null,"Mutation",-1),w=(0,a.Uk)("的描述，从而可以被 "),P={href:"https://react-query.tanstack.com/",target:"_blank",rel:"noopener noreferrer"},A=(0,a.Wm)("code",null,"react-query",-1),I=(0,a.Uk)("、"),v={href:"https://www.apollographql.com/docs/react/",target:"_blank",rel:"noopener noreferrer"},q=(0,a.Wm)("code",null,"apollo-client",-1),_=(0,a.Uk)("、"),j={href:"https://formidable.com/open-source/urql/",target:"_blank",rel:"noopener noreferrer"},R=(0,a.Wm)("code",null,"urql",-1),C=(0,a.Uk)(" 之类的库使用。"),E=(0,a.Wm)("p",null,"这么做的好处是可以方便的追踪到应用中调用哪些 API。同时我们还可以给这些接口调用定义入参和出参的类型，来更好的辅助开发。",-1),L={href:"https://github.com/everfind/bulletproof-react/blob/master/src/features/discussions/api/index.ts",target:"_blank",rel:"noopener noreferrer"},Q=(0,a.Uk)("这里是一个 API 接口调用的样例"),T=(0,a.uE)('<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',1),G={render:function(e,r){const t=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("p",null,[o,(0,a.Wm)("a",n,[i,(0,a.Wm)(t)]),p,(0,a.Wm)("a",c,[s,(0,a.Wm)(t)]),h,(0,a.Wm)("a",m,[u,(0,a.Wm)(t)]),d]),(0,a.Wm)("p",null,[(0,a.Wm)("a",g,[f,(0,a.Wm)(t)])]),k,b,(0,a.Wm)("p",null,[W,x,y,U,w,(0,a.Wm)("a",P,[A,(0,a.Wm)(t)]),I,(0,a.Wm)("a",v,[q,(0,a.Wm)(t)]),_,(0,a.Wm)("a",j,[R,(0,a.Wm)(t)]),C]),E,(0,a.Wm)("p",null,[(0,a.Wm)("a",L,[Q,(0,a.Wm)(t)])]),T],64)}}}}]);