"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[1685],{4787:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-82d8e3d6",path:"/courses/webpack/load-font.html",title:"加载字体文件",lang:"zh-CN",frontmatter:{title:"加载字体文件",description:"介绍 Webpack 中如何处理字体文件",keywords:["Webpack"],date:"2021-01-13T00:00:00.000Z",key:11},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"使用 Icon Fonts",slug:"使用-icon-fonts",children:[]},{level:2,title:"修改 file-loader 的 output 路径和 publicPath",slug:"修改-file-loader-的-output-路径和-publicpath",children:[]},{level:2,title:"删除未用的符号来较少字体大小",slug:"删除未用的符号来较少字体大小",children:[]},{level:2,title:"结论",slug:"结论",children:[]}],filePathRelative:"courses/webpack/load-font.md"}},5967:(n,s,a)=>{a.r(s),a.d(s,{default:()=>j});var e=a(6252);const p=(0,e.Wm)("p",null,"加载字体文件与加载图片类似，但也要做一些特殊处理。不同的浏览器对各种字体格式的支持不同。如果想要在各个浏览器上都有一个好的展示效果的话，通常需要考虑四种字体格式，老旧浏览器可以考虑使用系统默认字体。",-1),t=(0,e.Uk)("在 Webpack 中，我们依然依靠 loader 的 "),o=(0,e.Wm)("code",null,"type",-1),c=(0,e.Uk)(" 字段来配置。从 "),l={href:"https://caniuse.com/woff",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("Can I Use"),i=(0,e.Uk)(" 网站上可以查到，除了 Opera mini 以外，其他浏览器都支持 .woff 格式，同时 .woff2 也被大部分现代浏览器支持。"),u=(0,e.uE)('<p>如果只用一种字体格式的话，可以配置如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.woff2?(\\?v=\\d+\\.\\d+\\.\\d+)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token comment">// 匹配 .woff?v=1.1.1.</span>\n  use<span class="token operator">:</span> <span class="token punctuation">{</span>\n    type<span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>\n    parser<span class="token operator">:</span> <span class="token punctuation">{</span> dataUrlCondition<span class="token operator">:</span> <span class="token punctuation">{</span> maxSize<span class="token operator">:</span> <span class="token number">50000</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>如果需要在所有浏览器上都有一个好的显示效果，那么可以使用 <code>type: &quot;asset/resource&quot;</code>，放弃内联字体文件。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(ttf|eot|woff|woff2)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  type<span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>之后，我们需要在样式文件中定义字体，为了能优先使用新的字体格式，我们需要把定义放在前面。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>\n  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;Demo Font&#39;</span><span class="token punctuation">;</span>\n  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./fonts/df.woff2&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./fonts/df.woff&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;woff&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./fonts/df.eot&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;embedded-opentype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./fonts/df.ttf&#39;</span><span class="token punctuation">)</span></span>\n      <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&#39;truetype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="使用-icon-fonts" tabindex="-1"><a class="header-anchor" href="#使用-icon-fonts" aria-hidden="true">#</a> 使用 Icon Fonts</h2>',7),k={href:"https://www.npmjs.com/package/iconfont-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("iconfont-webpack-plugin"),m=(0,e.Uk)(" 这个插件可以用来加载 icon font 字体，它会将 svg 内联在 css 样式中。"),b={href:"https://www.npmjs.com/package/fontmin-webpack",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("fontmin-webpack"),g=(0,e.Uk)(" 可以帮助我们删除未被使用的字体。"),h=(0,e.uE)('<h2 id="修改-file-loader-的-output-路径和-publicpath" tabindex="-1"><a class="header-anchor" href="#修改-file-loader-的-output-路径和-publicpath" aria-hidden="true">#</a> 修改 file-loader 的 output 路径和 publicPath</h2><p>可以通过 <code>file-loader</code> 和 <code>url-loader</code> 来更好的控制字体的输出。我们设置可以每个 loader 都定义不同的 <code>publicPath</code>。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n  <span class="token comment">// 匹配 woff2 以及类似于 .woff?v=1.1.1 的模式</span>\n  test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.woff2?(\\?v=\\d+\\.\\d+\\.\\d+)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n  use<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loader<span class="token operator">:</span> <span class="token string">&quot;url-loader&quot;</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span> <span class="token punctuation">{</span>\n      limit<span class="token operator">:</span> <span class="token number">50000</span><span class="token punctuation">,</span>\n      mimetype<span class="token operator">:</span> <span class="token string">&quot;application/font-woff&quot;</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token string">&quot;./fonts/[name].[ext]&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 输出在 ./fonts 目录下</span>\n      publicPath<span class="token operator">:</span> <span class="token string">&quot;../&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 把模块目录也考虑到最终输出目录中去</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>在上面的例子中，<code>file-loader</code> 是被默认引用的，在 <code>limit</code> 中会启用 <code>file-loader</code>。</p></blockquote><h2 id="删除未用的符号来较少字体大小" tabindex="-1"><a class="header-anchor" href="#删除未用的符号来较少字体大小" aria-hidden="true">#</a> 删除未用的符号来较少字体大小</h2>',5),x={href:"https://www.npmjs.com/package/subfont",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Uk)("subfont"),v=(0,e.Uk)(" 可以静态分析输出的 html 中的文字，然后仅仅将被使用的字体符号写入到字体文件中。这样可以显著减小字体文件的大小。"),y=(0,e.uE)('<h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论" aria-hidden="true">#</a> 结论</h2><p>加载字体文件与加载图片类似，我们要做的是根据要支持的浏览器来选择不同的加载策略。</p><p>我们可以选择将体积较小的字体文件内联在样式文件中，将较大的字体文件单独输出为一个文件。</p><p>不同浏览器对字体格式的支持不同，我们可以选中一两种字体格式，然后老旧浏览器使用系统默认字体。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',5),j={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("p",null,[t,o,c,(0,e.Wm)("a",l,[r,(0,e.Wm)(a)]),i]),u,(0,e.Wm)("p",null,[(0,e.Wm)("a",k,[d,(0,e.Wm)(a)]),m]),(0,e.Wm)("p",null,[(0,e.Wm)("a",b,[f,(0,e.Wm)(a)]),g]),h,(0,e.Wm)("p",null,[(0,e.Wm)("a",x,[w,(0,e.Wm)(a)]),v]),y],64)}}}}]);