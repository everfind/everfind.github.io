"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[8406],{6605:(e,t,r)=>{r.r(t),r.d(t,{data:()=>l});const l={key:"v-272bb16e",path:"/courses/architecture-of-react-app/auth.html",title:"认证",lang:"zh-CN",frontmatter:{title:"认证",description:"权限管理是应用中非常重要的一环。本文介绍前端应用中如何实现验证与授权。",keywords:["React","架构","认证"],date:"2021-08-11T00:00:00.000Z",key:7},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"验证（Authentication）",slug:"验证-authentication",children:[{level:3,title:"localStorage 还是 cookie",slug:"localstorage-还是-cookie",children:[]},{level:3,title:"处理用户数据",slug:"处理用户数据",children:[]}]},{level:2,title:"授权（Authorization）",slug:"授权-authorization",children:[{level:3,title:"基于角色的访问控制",slug:"基于角色的访问控制",children:[]},{level:3,title:"基于权限的访问控制",slug:"基于权限的访问控制",children:[]}]}],filePathRelative:"courses/architecture-of-react-app/auth.md"}},4359:(e,t,r)=>{r.r(t),r.d(t,{default:()=>$});var l=r(6252);const o=(0,l.Wm)("p",null,"注意，在客户端做了认证不代表不需要在服务端做了。恰恰相反，我们更需要在服务端做认证，来保证资源被正确的使用。",-1),a=(0,l.Wm)("p",null,"认证可以分为两块进行讨论。",-1),n=(0,l.Wm)("h2",{id:"验证-authentication",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#验证-authentication","aria-hidden":"true"},"#"),(0,l.Uk)(" 验证（Authentication）")],-1),i=(0,l.Wm)("p",null,"验证旨在识别出谁是谁。",-1),c=(0,l.Uk)("常见的验证手段是通过 "),s={href:"https://jwt.io/",target:"_blank",rel:"noopener noreferrer"},p=(0,l.Uk)("JWT"),u=(0,l.Uk)("。在用户登录之后，我们将用户的 token 保存在应用中，之后每次请求都将这个 token 放到请求头或者 cookie 中。"),h=(0,l.Wm)("p",null,"最安全的存储 token 的方法是放到应用状态中。但是一旦用户刷新页面，应用状态被重置，token 就丢失了。因此，我们需要借助于一些客户端存储技术。",-1),m=(0,l.Wm)("h3",{id:"localstorage-还是-cookie",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#localstorage-还是-cookie","aria-hidden":"true"},"#"),(0,l.Uk)(),(0,l.Wm)("code",null,"localStorage"),(0,l.Uk)(" 还是 cookie")],-1),d=(0,l.Uk)("将 token 保存在 "),k=(0,l.Wm)("code",null,"localStorage",-1),W=(0,l.Uk)(" 中有一定的安全风险，如果处理不当，攻击者可以通过 "),g={href:"https://owasp.org/www-community/attacks/xss/",target:"_blank",rel:"noopener noreferrer"},b=(0,l.Uk)("XSS"),f=(0,l.Uk)(" 等方式获取用户的 token。"),x=(0,l.Wm)("p",null,[(0,l.Uk)("将 token 保存在 cookie 中，并设置 "),(0,l.Wm)("code",null,"HttpOnly"),(0,l.Uk)(" 属性，会比 "),(0,l.Wm)("code",null,"localStorage"),(0,l.Uk)(" 更加安全。但是这种方法需要与后端团队达成一致，同时 cookie 中的信息增多也会增加网络传输的负担。")],-1),y=(0,l.Wm)("p",null,[(0,l.Wm)("code",null,"localStorage"),(0,l.Uk)(" 简单，cookie 更安全。为了保证应用安全，与其争论使用哪种方式存储，不容给我们的应用增加更多的安全防护，以抵御 XSS 等安全攻击。也就是说，我们需要对 HTML 文本内容做净化处理。")],-1),U={href:"https://github.com/everfind/bulletproof-react/blob/master/src/components/Elements/MDPreview/MDPreview.tsx",target:"_blank",rel:"noopener noreferrer"},v=(0,l.Uk)("这里是一个对 HTML 做净化处理的样例"),w=(0,l.Wm)("h3",{id:"处理用户数据",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#处理用户数据","aria-hidden":"true"},"#"),(0,l.Uk)(" 处理用户数据")],-1),_=(0,l.Wm)("p",null,"已经获取到的用户数据应该作为一个全局状态存储，整个应用都可以访问到这个数据。",-1),C=(0,l.Uk)("如果使用 "),S=(0,l.Wm)("code",null,"react-query",-1),j=(0,l.Uk)(" 的话，我们可以使用 "),A={href:"https://github.com/alan2207/react-query-auth",target:"_blank",rel:"noopener noreferrer"},z=(0,l.Uk)("react-query-auth"),P=(0,l.Uk)(" 这个库来保存用户数据。如果没有，那么可以借助于 context + hooks 或者什么其他第三方状态管理库。"),q={href:"https://github.com/everfind/bulletproof-react/blob/master/src/lib/auth.tsx",target:"_blank",rel:"noopener noreferrer"},R=(0,l.Uk)("这里是保存用户信息的样例"),B=(0,l.Wm)("p",null,"如果应用可以读取到用户信息，那么就认为用户已经被验证过，是合法的。",-1),H={href:"https://github.com/everfind/bulletproof-react/blob/master/src/routes/index.tsx",target:"_blank",rel:"noopener noreferrer"},L=(0,l.Uk)("这里是使用用户信息的样例"),M=(0,l.Wm)("h2",{id:"授权-authorization",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#授权-authorization","aria-hidden":"true"},"#"),(0,l.Uk)(" 授权（Authorization）")],-1),T=(0,l.Wm)("p",null,"授权是决定用户是否有权限访问资源的过程。",-1),D=(0,l.Wm)("h3",{id:"基于角色的访问控制",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#基于角色的访问控制","aria-hidden":"true"},"#"),(0,l.Uk)(" 基于角色的访问控制")],-1),E=(0,l.Wm)("p",null,"基于角色的访问控制，简称RBAC（Role based access control）。",-1),O=(0,l.Wm)("p",null,"通常我们会先定义一些角色，不同的角色拥有不同的资源访问权限。之后，通过检查用户是否有某一个角色来判断是否有权限访问资源。",-1),X={href:"https://github.com/everfind/bulletproof-react/blob/master/src/lib/authorization.tsx",target:"_blank",rel:"noopener noreferrer"},J=(0,l.Uk)("这里是一个角色定义的样例"),N={href:"https://github.com/everfind/bulletproof-react/blob/master/src/features/discussions/components/CreateDiscussion.tsx",target:"_blank",rel:"noopener noreferrer"},Y=(0,l.Uk)("这里是基于角色判断权限的样例"),Z=(0,l.Wm)("h3",{id:"基于权限的访问控制",tabindex:"-1"},[(0,l.Wm)("a",{class:"header-anchor",href:"#基于权限的访问控制","aria-hidden":"true"},"#"),(0,l.Uk)(" 基于权限的访问控制")],-1),F=(0,l.Wm)("p",null,"基于权限的访问控制，简称 PBAC（Permission based access control）。",-1),G=(0,l.Wm)("p",null,"RBAC 并不适用于所有场景。有时候有些操作只能是资源所有者才能执行。比如评论信息，只能是用户自己才能删除或者修改。通过使用 PBAC，我们可以更灵活的实现这类访问控制。",-1),I=(0,l.Wm)("p",null,"我们可以灵活的同时使用这两种访问控制方案。通常情况下我们只需要基于角色的权限控制，特殊情况下我们再使用指定权限。",-1),K={href:"https://github.com/everfind/bulletproof-react/blob/master/src/features/comments/components/CommentsList.tsx",target:"_blank",rel:"noopener noreferrer"},Q=(0,l.Uk)("这里是混合使用两种访问控制方法的样例"),V=(0,l.uE)('<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',1),$={render:function(e,t){const r=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[o,a,n,i,(0,l.Wm)("p",null,[c,(0,l.Wm)("a",s,[p,(0,l.Wm)(r)]),u]),h,m,(0,l.Wm)("p",null,[d,k,W,(0,l.Wm)("a",g,[b,(0,l.Wm)(r)]),f]),x,y,(0,l.Wm)("p",null,[(0,l.Wm)("a",U,[v,(0,l.Wm)(r)])]),w,_,(0,l.Wm)("p",null,[C,S,j,(0,l.Wm)("a",A,[z,(0,l.Wm)(r)]),P]),(0,l.Wm)("p",null,[(0,l.Wm)("a",q,[R,(0,l.Wm)(r)])]),B,(0,l.Wm)("p",null,[(0,l.Wm)("a",H,[L,(0,l.Wm)(r)])]),M,T,D,E,O,(0,l.Wm)("p",null,[(0,l.Wm)("a",X,[J,(0,l.Wm)(r)])]),(0,l.Wm)("p",null,[(0,l.Wm)("a",N,[Y,(0,l.Wm)(r)])]),Z,F,G,I,(0,l.Wm)("p",null,[(0,l.Wm)("a",K,[Q,(0,l.Wm)(r)])]),V],64)}}}}]);