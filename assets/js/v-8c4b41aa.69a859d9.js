"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[8331],{4973:(e,t,i)=>{i.r(t),i.d(t,{data:()=>a});const a={key:"v-8c4b41aa",path:"/posts/2021/08/25/how-to-decompose-component.html",title:"介绍一个组件拆分方法",lang:"zh-CN",frontmatter:{title:"介绍一个组件拆分方法",description:"如何将组件分解为子组件有时候是一件非常棘手的事情。今天我们借鉴一篇论文中思路，总结一个组件拆分方法。当需要拆分组件的时候，可以参考这个方法，审视一下组件拆分是否合理。",keywords:["软件设计","组件拆分"],date:"2021-08-25T00:00:00.000Z",permalinkPattern:"posts/:year/:month/:day/:slug.html",tags:["通用知识"]},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"拆分原则",slug:"拆分原则",children:[]},{level:2,title:"好的拆分实践",slug:"好的拆分实践",children:[]},{level:2,title:"不好的拆分实践",slug:"不好的拆分实践",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"posts/how-to-decompose-component.md"}},4398:(e,t,i)=>{i.r(t),i.d(t,{default:()=>y});var a=i(6252);const p=(0,a.Wm)("p",null,"不管是 React 和 Vue，在开发组件这块，都讲究利用组合来复用组件。但是如何将组件分解成多个子组件，有时候却是一件非常棘手的问题。拆分的不合理，非但不能提高组件的复用性，还会带来额外的维护成本。",-1),o=(0,a.Uk)("在这篇"),l={href:"http://www.cse.msu.edu/~cse870/Materials/Parnas/extension-contraction-TSE-March-1979.pdf",target:"_blank",rel:"noopener noreferrer"},r=(0,a.Uk)("设计易于扩展和收缩的软件"),s=(0,a.Uk)("论文中，作者介绍了一种软件设计思路，我们整理了下，发现不失为一种解决组件拆分的方法。今天我们就来讲一讲论文中的思路。"),c=(0,a.uE)('<h2 id="拆分原则" tabindex="-1"><a class="header-anchor" href="#拆分原则" aria-hidden="true">#</a> 拆分原则</h2><p>论文中的思路，大致可以归纳为一个基本原则，当满足如下四个条件的时候，我们可以从组件 A 中拆分出来组件 B：</p><ol><li>A 因为使用了 B，而变得更简单，更易于实现。</li><li>B 不能使用 A，即不允许 A、B 之间存在循环依赖。</li><li>B 可以作为独立单元被其他组件使用。</li><li>去除 B 以后，A 的功能没有实际意义。</li></ol><p>现在我们结合样例来看看如何使用这个原则来拆分组件。</p><p>假设我们有一个视频播放器组件，有如下几个功能：</p><ol><li>支持按照 16:9 的比例播放视频。</li><li>可以随时播放和暂停播放。</li><li>支持随意拖动视频播放进度。</li><li>支持静音。</li><li>支持全屏播放。</li></ol><p><img src="/posts/images/decompose-components/videoplayer-c.png" alt="视频播放器"></p><h2 id="好的拆分实践" tabindex="-1"><a class="header-anchor" href="#好的拆分实践" aria-hidden="true">#</a> 好的拆分实践</h2><p><img src="/posts/images/decompose-components/valid-split-c.png" alt="好的拆分实践"></p>',9),n=(0,a.Uk)("如上图所示，我们拆分出来四个组件：一个"),d={href:"https://css-tricks.com/aspect-ratio-boxes/",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("可控制高宽比"),g=(0,a.Uk)("的展示组件 AspectRatioBox，一个滑动条，按钮和图标。"),m=(0,a.uE)('<p>现在我们来使用上面的拆分原则来考察一下 AspectRatioBox 这个组件。</p><p>组件 VideoPlayer 因为使用了 AspectRatioBox 而变得更加简单，否则 VideoPlayer 得自己实现高宽比的功能。</p><p>组件 AspectRatioBox 不使用组件 VideoPlayer 的任何功能，也没有任何场景需要使用到组件 VideoPlayer 的功能，满足要求。</p><p>除去组件 VideoPlayer，AspectRatioBox 可以单独使用，即组件 AspectRatioBox 可以复用在任何需要控制高宽比的地方。</p><p>组件 VideoPlayer 在去除组件 AspectRatioBox 以后，就丧失了视频播放的完整功能。</p><p>因此，AspectRatioBox 的拆分是符合原则的，即是一个好的拆分方案。</p><blockquote><p>有时候我们在拆分的时候，并不会像这个例子中描述的一样这么明显。这种情况下，我们可以先大致进行拆分，然后在具体实现的时候不断调整。</p></blockquote><h2 id="不好的拆分实践" tabindex="-1"><a class="header-anchor" href="#不好的拆分实践" aria-hidden="true">#</a> 不好的拆分实践</h2><p><img src="/posts/images/decompose-components/invalid-split-c.png" alt="不好的拆分实践"></p><p>如上图所示，我们从 VideoPlayer 中拆分出一个 ActionsBar 组件。这个 ActionsBar 组件包含所有与用户交互相关的功能。</p><p>同样，结合上面的拆分原则，我们考察一下 ActionsBar 这个组件。</p><p>首先，在 VideoPlayer 是否因为使用了 ActionsBar 而变得简单这点上就存在讨论空间的。因为 ActionsBar 组件为了响应用户操作，势必需要传入各种回调函数。VideoPlayer 就需要在其内部定义这些回调函数，然后再传递给 ActionsBar。</p><p>组件 ActionsBar 不会使用 VideoPlayer 的任何功能，这点是符合要求的。</p><p>除去组件 VideoPlayer，ActionsBar 组件就丧失了存在的意义，无法在其他地方复用了。</p><p>组件 VideoPlayer 永远需要与组件 ActionsBar 一起使用，否则就没有播放视频的功能了。这点符合要求。</p><p>基于以上考察，我们可以认为组件 ActionsBar 的拆分是不合理的。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>在上面的例子中，我们通过文章开头的指导原则来对 UI 组件进行拆分。其实，这个指导原则还可以用在任何其他地方，比如函数、模块设计等。</p><p>组件的拆分不是一层不变的，随着代码的变迁，功能的迭代，最初的拆分方案已经不在符合上述的原则，那么我们就需要重新审视组件的拆分方案，来优化组件。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',20),y={render:function(e,t){const i=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[p,(0,a.Wm)("p",null,[o,(0,a.Wm)("a",l,[r,(0,a.Wm)(i)]),s]),c,(0,a.Wm)("p",null,[n,(0,a.Wm)("a",d,[h,(0,a.Wm)(i)]),g]),m],64)}}}}]);