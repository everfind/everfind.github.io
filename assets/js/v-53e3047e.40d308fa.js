"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[3690],{7210:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-53e3047e",path:"/courses/webpack/manage-config.html",title:"管理 Webpack 的配置",lang:"zh-CN",frontmatter:{title:"管理 Webpack 的配置",description:"对 Webpack 的配置项进行管理",keywords:["Webpack"],date:"2021-01-06T00:00:00.000Z",key:4},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"webpack-merge 使用",slug:"webpack-merge-使用",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/manage-config.md"}},6007:(n,s,a)=>{a.r(s),a.d(s,{default:()=>E});var p=a(6252);const t=(0,p.Wm)("p",null,"由于 webpack 配置的复杂性，webpack.config.js 将会慢慢变得难以理解和维护。因此，我们需要一种管理 webpack 配置的方法。",-1),e=(0,p.Wm)("p",null,"一般有如下几种方式可供选择：",-1),o=(0,p.Wm)("li",null,"每一个环境的配置单独形成一个文件，然后通过 cli 的 --config 参数来指定配置文件",-1),c=(0,p.Uk)("通过一些库来添加配置，比如 "),l={href:"https://github.com/namics/webpack-config-plugins",target:"_blank",rel:"noopener noreferrer"},u=(0,p.Uk)("webpack-config-plugins"),r=(0,p.Uk)("、"),i={href:"https://neutrino.js.org/",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Uk)("Neutrino"),b=(0,p.Uk)("、"),m={href:"https://www.npmjs.com/package/webpack-blocks",target:"_blank",rel:"noopener noreferrer"},g=(0,p.Uk)("webpack-blocks"),d=(0,p.Uk)("通过工具来管理配置，比如 "),w={href:"https://www.npmjs.com/package/create-react-app",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Uk)("create-react-app"),h=(0,p.Uk)("、 "),v={href:"https://www.npmjs.com/package/kyt",target:"_blank",rel:"noopener noreferrer"},y=(0,p.Uk)("kyt"),q=(0,p.Uk)("、 "),x={href:"https://www.npmjs.com/package/nwb",target:"_blank",rel:"noopener noreferrer"},W=(0,p.Uk)("nwb"),j=(0,p.Wm)("li",null,"在单个文件中维护所有的配置，然后通过 --mode 参数来区分环境",-1),U=(0,p.Uk)("本文介绍一种新的管理方式，我们将应用配置拆散成多个小的函数，比如样式配置、js 配置、图片配置等，然后通过 "),C={href:"https://www.npmjs.org/package/webpack-merge",target:"_blank",rel:"noopener noreferrer"},_=(0,p.Uk)("webpack-merge"),P=(0,p.Uk)(" 将这些配置再组合起来。这样做有一个好处是可以最大限度的复用配置，同时又非常的灵活。webpack-merge 甚至可以做到针对单个配置项的灵活设置。"),S=(0,p.uE)('<p>webpack-merge 主要功能就是串接数组和合并对象。下面的例子说明 webpack-merge 是如何工作的：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&quot;webpack-merge&quot;</span><span class="token punctuation">)</span>\n<span class="token punctuation">..</span>.\n<span class="token operator">&gt;</span> merge<span class="token punctuation">(</span>\n<span class="token punctuation">..</span>. <span class="token punctuation">{</span> a: <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>, b: <span class="token number">5</span>, c: <span class="token number">20</span> <span class="token punctuation">}</span>,\n<span class="token punctuation">..</span>. <span class="token punctuation">{</span> a: <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>, b: <span class="token number">10</span>, d: <span class="token number">421</span> <span class="token punctuation">}</span>\n<span class="token punctuation">..</span>. <span class="token punctuation">)</span>\n<span class="token punctuation">{</span> a: <span class="token punctuation">[</span> <span class="token number">1</span>, <span class="token number">2</span> <span class="token punctuation">]</span>, b: <span class="token number">10</span>, c: <span class="token number">20</span>, d: <span class="token number">421</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>在合并对象的时候，webpack-merge 不会直接覆盖已有值，而是合并。</p></blockquote><h2 id="webpack-merge-使用" tabindex="-1"><a class="header-anchor" href="#webpack-merge-使用" aria-hidden="true">#</a> webpack-merge 使用</h2><p>安装 webpack-merge</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">add</span> webpack-merge --develop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>我们对 webpack 的配置做一些抽象，将配置项级别的、小的配置放在 <code>webpack.parts.js</code> 里面，将更高级别的配置放在 webpack.config.js 中，示例如下：</p><p><strong>webpack.parts.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> WebpackPluginServe <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-plugin-serve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  MiniHtmlWebpackPlugin<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mini-html-webpack-plugin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\nexports<span class="token punctuation">.</span><span class="token function-variable function">devServer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  watch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">WebpackPluginServe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      port<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">8080</span><span class="token punctuation">,</span>\n      <span class="token keyword">static</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Expose if output.path changes</span>\n      liveReload<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      waitForBuild<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\nexports<span class="token punctuation">.</span><span class="token function-variable function">page</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniHtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> context<span class="token operator">:</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><code>webpack.config.js</code> 用来组合这些配置项：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> mode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-nano/argv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> merge <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;webpack-merge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> parts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./webpack.parts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> commonConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> entry<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;./src&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  parts<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&quot;Demo&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> productionConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> developmentConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> entry<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;webpack-plugin-serve/client&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  parts<span class="token punctuation">.</span><span class="token function">devServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getConfig</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">mode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">&quot;production&quot;</span><span class="token operator">:</span>\n      <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> productionConfig<span class="token punctuation">,</span> <span class="token punctuation">{</span> mode <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token string">&quot;development&quot;</span><span class="token operator">:</span>\n      <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span>commonConfig<span class="token punctuation">,</span> developmentConfig<span class="token punctuation">,</span> <span class="token punctuation">{</span> mode <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">default</span><span class="token operator">:</span>\n      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Trying to use an unknown mode, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">getConfig</span><span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>通过使用 webpack-merge, 我们可以方便的复用、修改、扩展配置，而不用再担心配置不好维护了。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ol><li>因为 webpack 配置是普通 JavaScript 代码，因此我们有多种方式来管理这些配置项。</li><li>webpack-merge 提供了一种轻量级的组合webpack 配置的方法。当然，你也可以使用其他的方式来管理配置。</li><li>基于组合的方式来管理配置可以最大限度的复用配置，甚至可以通过抽取 npm包的形式跨项目复用。</li></ol><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',15),E={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.j4)(p.HY,null,[t,e,(0,p.Wm)("ol",null,[o,(0,p.Wm)("li",null,[c,(0,p.Wm)("a",l,[u,(0,p.Wm)(a)]),r,(0,p.Wm)("a",i,[k,(0,p.Wm)(a)]),b,(0,p.Wm)("a",m,[g,(0,p.Wm)(a)])]),(0,p.Wm)("li",null,[d,(0,p.Wm)("a",w,[f,(0,p.Wm)(a)]),h,(0,p.Wm)("a",v,[y,(0,p.Wm)(a)]),q,(0,p.Wm)("a",x,[W,(0,p.Wm)(a)])]),j]),(0,p.Wm)("p",null,[U,(0,p.Wm)("a",C,[_,(0,p.Wm)(a)]),P]),S],64)}}}}]);