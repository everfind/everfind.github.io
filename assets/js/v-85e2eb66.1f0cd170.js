"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[8086],{9247:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-85e2eb66",path:"/courses/webpack/simple-demo.html",title:"一个简单的 demo",lang:"zh-CN",frontmatter:{title:"一个简单的 demo",description:"通过一个样例介绍如何使用 Webpack",keywords:["Webpack"],date:"2021-01-03T00:00:00.000Z",key:2},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"初始化项目",slug:"初始化项目",children:[]},{level:2,title:"安装 Webpack",slug:"安装-webpack",children:[]},{level:2,title:"运行 Webpack",slug:"运行-webpack",children:[]},{level:2,title:"添加其他文件",slug:"添加其他文件",children:[]},{level:2,title:"配置 mini-html-webpack-plugin 插件",slug:"配置-mini-html-webpack-plugin-插件",children:[]},{level:2,title:"检查输出",slug:"检查输出",children:[]},{level:2,title:"添加快捷命令",slug:"添加快捷命令",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/simple-demo.md"}},6657:(n,s,a)=>{a.r(s),a.d(s,{default:()=>j});var e=a(6252);const p=(0,e.Uk)("在开始之前，我们需要准备好本地的开发环境，安装好 Nodejs. Nodejs 可以直接从"),c={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Uk)("官方网站"),l=(0,e.Uk)("下载安装。"),o=(0,e.uE)('<h2 id="初始化项目" tabindex="-1"><a class="header-anchor" href="#初始化项目" aria-hidden="true">#</a> 初始化项目</h2><p>创建一个目录，然后通过 <code>npm init -y</code> 生层 <code>package.json</code>.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> webpack-demo\n\n<span class="token builtin class-name">cd</span> webpack-demo\n\n<span class="token comment"># -y 选项会使用默认值来填充 package.json</span>\n<span class="token function">npm</span> init -y\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="安装-webpack" tabindex="-1"><a class="header-anchor" href="#安装-webpack" aria-hidden="true">#</a> 安装 Webpack</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">add</span> webpack webpack-nano --develop <span class="token comment"># --develop === -D</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>通过以上命令，我们将 Webpack 安装在了项目的 <code>node_modules</code> 目录下，并且在 <code>node_modules/.bin</code> 目录下可以找到 webpack 的可执行文件。</p>',6),i=(0,e.Uk)("需要说明的是，我们这里使用了 "),r={href:"https://www.npmjs.com/package/webpack-nano",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("webpack-nano"),d=(0,e.Uk)(" 而不是官方的 webpack-cli 是因为 webpack-nano 的功能足够我们使用了，而且 webpack-nano 兼容 webpack 4 和 webpack 5 的。"),b=(0,e.uE)('<h2 id="运行-webpack" tabindex="-1"><a class="header-anchor" href="#运行-webpack" aria-hidden="true">#</a> 运行 Webpack</h2><p>在命令行输入 <code>node_modules/.bin/wp</code> 来运行 webpack-nano。输出结果如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>⬡ webpack: Build Finished\n⬡ webpack: assets by status 0 bytes [cached] 1 asset\n\n\n  WARNING in configuration\n  The &#39;mode&#39; option has not been set, webpack will fallback to &#39;production&#39; for this value. Set &#39;mode&#39; option to &#39;development&#39; or &#39;production&#39; to enable defaults for each environment.\n  You can also set it to &#39;none&#39; to disable any default behavior. Learn more: https://webpack.js.org/configuration/mode/\n\n\n  ERROR in main\n  Module not found: Error: Can&#39;t resolve &#39;./src&#39; in &#39;/Users/xxx/workspace/projects/webpack-demo&#39;\n\n\n  webpack 5.11.1 compiled with 1 error and 1 warning in 146 ms\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>输出结果显示 webpack 找不到可编译的文件。</p><p>为了要 webpack 能正确运行起来，我们需要做一些其他操作。</p><ol><li>添加 <code>src/index.js</code> 文件，内容为 <code>console.log(&#39;Hello World!&#39;)</code>;</li><li>执行 <code>./node_modules/.bin/wp</code>，webpack 默认会找到这个文件。</li><li>检查 <code>dist/main.js</code>，在输出文件中我们可以看到 webpack 的启动代码，在之后一点的地方，我们可以找到 <code>src/index.js</code> 文件的内容。</li></ol><h2 id="添加其他文件" tabindex="-1"><a class="header-anchor" href="#添加其他文件" aria-hidden="true">#</a> 添加其他文件</h2><p>为了让构建更复杂一点，我们再添加一个模块，<code>src/component.js</code>。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> text<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> element<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>修改 <code>src/index.js</code> 代码如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> component <span class="token keyword">from</span> <span class="token string">&#39;./component&#39;</span><span class="token punctuation">;</span>\n\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>再次运行 <code>node_modules/.bin/wp</code>，我们查看 <code>dist</code> 目录下的输出，我们可以看到这两个模块的代码都在输出的 bundle 中。</p><p>Webpack 完成了打包输出，那么如何在浏览器中运行呢？</p><h2 id="配置-mini-html-webpack-plugin-插件" tabindex="-1"><a class="header-anchor" href="#配置-mini-html-webpack-plugin-插件" aria-hidden="true">#</a> 配置 mini-html-webpack-plugin 插件</h2>',14),m=(0,e.Uk)("我们需要写一个 html 文件，在这个文件中引用 webpack 打包输出的文件即可。可以通过 "),k={href:"https://www.npmjs.com/package/mini-html-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("mini-html-webpack-plugin"),g=(0,e.Uk)(" 这个插件来帮我们自动的做这个事情。"),w=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">add</span> mini-html-webpack-plugin --develop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',1),v={href:"https://www.npmjs.com/package/webpack-html-plugin",target:"_blank",rel:"noopener noreferrer"},x=(0,e.Uk)("webpack-html-plugin"),f=(0,e.Uk)(" 也可以完成上面的工作，而且功能更丰富。但是 mini-html-webpack-plugin 功能已经足够演示使用，后面会介绍 webpack-html-plugin 的使用。"),y=(0,e.uE)('<p>为了让 Webpack 可以使用这个插件，我们需要一个配置文件，<code>webpack.config.js</code>。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> mode <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack-nano/argv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> MiniHtmlWebpackPlugin <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mini-html-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniHtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      context<span class="token operator">:</span> <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">&#39;Demo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>配置完成之后，执行如下命令：</p><ol><li>通过 <code>node_modules/.bin/wp --mode production</code> 构建项目。</li><li>使用 <code>npx serve dist</code> 运行一个静态文件服务器。</li></ol><p>在浏览器中我们可以看到如下输出：</p><p><img src="/courses/webpack/helloworld-c.png" alt="HelloWorld"></p><blockquote><p>Webpack 不仅支持对象类型的配置，还支持数组、Promise 类型的配置。Webpack 对输入和输出都有默认值，默认会从 <code>src/</code> 目录下开始寻找模块，默认输出到 <code>dist</code> 目录中。我们可以通过 <code>entry</code> 和 <code>output</code> 这两个配置来改变这个行为。</p></blockquote><h2 id="检查输出" tabindex="-1"><a class="header-anchor" href="#检查输出" aria-hidden="true">#</a> 检查输出</h2><p>在执行完 <code>node_modules/.bin/wp --mode production</code> 以后，输出如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>⬡ webpack: Build Finished\n⬡ webpack: asset index.html 190 bytes [compared for emit]\n  asset main.js 136 bytes [compared for emit] [minimized] (name: main)\n  orphan modules 149 bytes [orphan] 1 module\n  ./src/index.js + 1 modules 228 bytes [built] [code generated]\n  webpack 5.11.1 compiled successfully in 198 ms\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>从 Webpack 5 开始，输出内容被极大的简化了。在之前的版本中，输出内容会包含一整个 Webpack 运行时，但是从 Webpack 5 开始，Webpack 可以按照最小需求优化输出了。</p><h2 id="添加快捷命令" tabindex="-1"><a class="header-anchor" href="#添加快捷命令" aria-hidden="true">#</a> 添加快捷命令</h2><p>不断执行 <code>node_modules/.bin/wp --mode production</code> 这个命令非常麻烦，我们可以在 package.json 添加一个快捷命令。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wp --mode production&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在执行 <code>npm run build</code>，我们可以得到与之前相同的结果。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>通过本地依赖的形式安装 webpack 是一个好主意，这样可以确切的直到使用了哪个版本的 Webpack。</p><p>Webpack-cli 是官方提供的命令行工具，功能非常丰富。但是如果仅仅是基础使用的话，Webpack-nano 是一个不错的备选。</p><p>如果要修改 Webpack 的行为，我们需要一个额外的配置文件，通常叫 <code>webpack.config.js</code>。</p><p>mini-html-webpack-plugin 和 html-webpack-plugin 都可以用来生成应用的入口 html 文件，html-webpack-plugin 功能更丰富。</p><p>通过 npm scripts 可以帮助我们减少一些重复的命令行输入。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',22),j={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[(0,e.Wm)("p",null,[p,(0,e.Wm)("a",c,[t,(0,e.Wm)(a)]),l]),o,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[i,(0,e.Wm)("a",r,[u,(0,e.Wm)(a)]),d])]),b,(0,e.Wm)("p",null,[m,(0,e.Wm)("a",k,[h,(0,e.Wm)(a)]),g]),w,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",v,[x,(0,e.Wm)(a)]),f])]),y],64)}}}}]);