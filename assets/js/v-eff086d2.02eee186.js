"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[7112],{1883:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-eff086d2",path:"/courses/webpack/build-analyse.html",title:"构建数据分析",lang:"zh-CN",frontmatter:{title:"构建数据分析",description:"介绍 Webpack 中如何分析构建数据",keywords:["Webpack"],date:"2021-01-24T00:00:00.000Z",key:22},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"配置 Webpack",slug:"配置-webpack",children:[]},{level:2,title:"Node API",slug:"node-api",children:[]},{level:2,title:"设置性能预估参数",slug:"设置性能预估参数",children:[]},{level:2,title:"依赖分析",slug:"依赖分析",children:[]},{level:2,title:"组成分析",slug:"组成分析",children:[]},{level:2,title:"处理输出信息的插件",slug:"处理输出信息的插件",children:[]},{level:2,title:"分析未被使用的文件",slug:"分析未被使用的文件",children:[]},{level:2,title:"重复模块分析",slug:"重复模块分析",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/build-analyse.md"}},7276:(n,a,s)=>{s.r(a),s.d(a,{default:()=>_n});var e=s(6252);const p=(0,e.uE)('<p>通过分析 Webpack 构建过程中的一些统计数据，我们可以更清楚地了解 Webpack 的一些细节。在这些数据中，我们可以看到构建输出的 bundle 的组成部分，项目中哪些模块是可以被删除的，哪些模块是重复的等信息。</p><h2 id="配置-webpack" tabindex="-1"><a class="header-anchor" href="#配置-webpack" aria-hidden="true">#</a> 配置 Webpack</h2><p>我们可以指定 <code>--json</code> 参数来让 Webpack 输出构建过程中的统计数据。</p><p><strong>package.json</strong></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;build:stats&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wp --mode production --json &gt; stats.json&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>此时执行 <code>npm run build:stats</code>，在构建完成后，我们可以在项目的根目录下发现 <code>stats.json</code> 这个文件。这个文件里面就包含了 Webpack 构建过程中的统计数据，我们可以通过一些工具来分析这些数据。</p>',6),t=(0,e.Uk)("如果想要捕捉与时间相关的数据的话，需要在 Webpack 配置中设置 "),r=(0,e.Wm)("code",null,"profile",-1),l=(0,e.Uk)(" 为 "),c=(0,e.Wm)("code",null,"true",-1),o=(0,e.Uk)("。"),i={href:"https://www.npmjs.com/package/0x",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("0x"),k=(0,e.Uk)(" 这个库可以生成一张 Webpack 构建过程的火焰图来分析哪个阶段比较耗时。"),b=(0,e.uE)('<h2 id="node-api" tabindex="-1"><a class="header-anchor" href="#node-api" aria-hidden="true">#</a> Node API</h2><p>Webpack 的构建数据也可以通过 Node API 搜集，因为在构建数据中可能存在一些错误，我们需要对这些错误做一些处理，代码如下：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.config.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">webpack</span><span class="token punctuation">(</span>config<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stats</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;errors-only&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>如果我们想对构建数据做进一步的处理，Node API 是一个非常合适的方式。</p><blockquote><p>如果我们想将 <code>stats</code> 的数据以 JSON 格式输出，则可以使用 <code>stats.toJson()</code>，<code>stats.toJson(&#39;verbose&#39;)</code> 会输出更多的信息。</p></blockquote>',5),m=(0,e.Uk)("我们也可以通过一些插件来处理这些数据，比如 "),d={href:"https://www.npmjs.com/package/webpack-stats-plugin",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("webpack-stats-plugin"),g=(0,e.Uk)(".通过这个插件，我们可以对输出数据做一些处理，比如选择性的输出某一些特定数据。"),w={href:"https://www.npmjs.com/package/webpack-bundle-tracker",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("webpack-bundle-tracker"),f=(0,e.Uk)(" 可以在 Webpack 还在构建时就搜集一些数据，具体可以参考插件文档。"),y=(0,e.uE)('<h2 id="设置性能预估参数" tabindex="-1"><a class="header-anchor" href="#设置性能预估参数" aria-hidden="true">#</a> 设置性能预估参数</h2><p>在 Webpack 中，我们可以通过设置一些预估参数来限制输出 bundle 的大小。</p><p><strong>webpack.config.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> productionConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token operator">...</span><span class="token punctuation">{</span>\n    performance<span class="token operator">:</span> <span class="token punctuation">{</span>\n      hints<span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span> <span class="token comment">// &quot;error&quot; or false 也是可选值</span>\n      maxEntrypointSize<span class="token operator">:</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token comment">// 单位为字节, 默认 250k</span>\n      maxAssetSize<span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span> <span class="token comment">// 单位为字节</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>如果项目构建输出超过了限制，我们可以看到类似下面的信息：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>WARNING in entrypoint size limit: The following entrypoint(s) combined asset size exceeds the recommended limit (48.8 KiB). This can impact web performance.\nEntrypoints:\n  main (131 KiB)\n      runtime.41f8.js\n      vendor.1622.js\n      main.aca1.css\n      main.eddd.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>在 CI 中，我们可以设置 <code>hints: &quot;error&quot;</code> 来使得当输出大小超过限制时直接构建失败。</p><h2 id="依赖分析" tabindex="-1"><a class="header-anchor" href="#依赖分析" aria-hidden="true">#</a> 依赖分析</h2><p>我们可以可视化的展示各个模块间的依赖关系。下面很多插件都可以完成这个功能。</p>',9),x={href:"https://github.com/webpack/analyse",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Uk)("官方提供的分析工具"),U={href:"https://restrry.github.io/webpack-deps-tree/static/",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("webpack-deps-tree"),_=(0,e.Uk)(" 展示了 项目的模块图，我们可以清晰的看到各模块间的依赖关系。"),q={href:"https://www.npmjs.com/package/circular-dependency-plugin",target:"_blank",rel:"noopener noreferrer"},z=(0,e.Uk)("circular-dependency-plugin"),B=(0,e.Uk)(" 可以看到项目中是否有循环依赖。"),N={href:"https://www.npmjs.com/package/dependency-cruiser",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("dependency-cruiser"),K=(0,e.Uk)(" 可以不依赖与构建工具来分析各模块的依赖关系。"),P={href:"https://www.npmjs.com/package/madge",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Uk)("madge"),I=(0,e.Uk)(" 同样是一个不依赖构建工具的依赖关系分析工具。"),C=(0,e.Wm)("h2",{id:"组成分析",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#组成分析","aria-hidden":"true"},"#"),(0,e.Uk)(" 组成分析")],-1),S=(0,e.Wm)("p",null,"饼图、树图等可视化工具可帮助我们清晰的看到 Bundle 的组成。",-1),J=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:"/courses/webpack/pie-c.png",alt:"饼图"})],-1),O={href:"https://chrisbateman.github.io/webpack-visualizer/",target:"_blank",rel:"noopener noreferrer"},T=(0,e.Uk)("webpack-visualizer"),R=(0,e.Uk)(" 通过饼图的形式展示了 bundle 是由哪些模块组成的，各个模块的大小等。"),G={href:"https://alexkuz.github.io/webpack-chart/",target:"_blank",rel:"noopener noreferrer"},H=(0,e.Uk)("webpack-chart/"),L=(0,e.Uk)(" 也实现了同样的功能。"),Y=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:"/courses/webpack/tree-c.png",alt:"树图"})],-1),Z={href:"https://www.npmjs.com/package/webpack-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"},$=(0,e.Uk)("webpack-bundle-analyzer"),D=(0,e.Uk)(" 会生成一张可缩放的树图，如上图所示。"),F={href:"https://www.npmjs.com/package/webpack-bundle-size-analyzer",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Uk)("webpack-bundle-size-analyzer"),Q=(0,e.Uk)(" 可以输出构建数据各种资源的大小。比如:"),V=(0,e.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ webpack-bundle-size-analyzer stats.json\nreact: 93.99 KB (74.9%)\npurecss: 15.56 KB (12.4%)\nstyle-loader: 6.99 KB (5.57%)\nfbjs: 5.02 KB (4.00%)\nobject-assign: 1.95 KB (1.55%)\ncss-loader: 1.47 KB (1.17%)\n&lt;self&gt;: 572 B (0.445%)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="处理输出信息的插件" tabindex="-1"><a class="header-anchor" href="#处理输出信息的插件" aria-hidden="true">#</a> 处理输出信息的插件</h2><p>有很多插件可以处理 Webpack 的输出信息，使得更易读、更方便。</p>',3),X={href:"https://www.npmjs.com/package/webpackbar",target:"_blank",rel:"noopener noreferrer"},nn=(0,e.Uk)("webpackbar"),an=(0,e.Uk)(" 可以被用来跟踪 Webpack 的构建进度。"),sn=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"webpack.ProgressPlugin"),(0,e.Uk)(" 是内置的展示构建进度的插件。")],-1),en={href:"https://www.npmjs.com/package/webpack-dashboard",target:"_blank",rel:"noopener noreferrer"},pn=(0,e.Uk)("webpack-dashboard"),tn=(0,e.Uk)(" 可以基于 Webpack 的输出在命令行展示一个看板信息。"),rn=(0,e.Wm)("h2",{id:"分析未被使用的文件",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#分析未被使用的文件","aria-hidden":"true"},"#"),(0,e.Uk)(" 分析未被使用的文件")],-1),ln={href:"https://www.npmjs.com/package/unused-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},cn=(0,e.Uk)("unused-webpack-plugin"),on=(0,e.Uk)(" 可以分析出项目中哪些模块是未被使用的。"),un={href:"https://www.npmjs.com/package/remnants",target:"_blank",rel:"noopener noreferrer"},kn=(0,e.Uk)("remnants"),bn=(0,e.Uk)(" 同样可以分析未被使用的模块，同时它可以脱离于 Webpack 独立使用。"),mn=(0,e.Wm)("h2",{id:"重复模块分析",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#重复模块分析","aria-hidden":"true"},"#"),(0,e.Uk)(" 重复模块分析")],-1),dn=(0,e.Wm)("p",null,"有很多插件可以分析出项目中的重复模块。",-1),hn={href:"https://www.npmjs.com/package/inspectpack",target:"_blank",rel:"noopener noreferrer"},gn=(0,e.Uk)("inspectpack"),wn=(0,e.Uk)(" 既可以通过插件的形式与 Webpack 一起使用，又可以在命令行直接使用。"),Wn={href:"https://www.npmjs.com/package/find-duplicate-dependencies",target:"_blank",rel:"noopener noreferrer"},fn=(0,e.Uk)("find-duplicate-dependencies"),yn=(0,e.Uk)(" 可以找出项目中重复依赖的 npm 包。"),xn={href:"https://www.npmjs.com/package/depcheck",target:"_blank",rel:"noopener noreferrer"},vn=(0,e.Uk)("depcheck"),Un=(0,e.Uk)(" 更进一步，还会找出项目中未被使用的依赖和使用了但是没有安装的依赖。"),jn=(0,e.uE)('<h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>我们可以将 Webpack 构建数据输出到一个 JSON 文件中。这些构建数据包含了 bundle 的组成以及构建时间等信息。</p><p>有很多工具可以分析这个构建数据，我们可以可视化的查看 bundle 的组成等信息。</p><p>我们可以通过设置性能预估参数来控制输出的 bundle 大小，从而优化性能。</p><p>了解 bundle 的组成可以帮助我们优化 bundle 的大小。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',6),_n={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[t,r,l,c,o,(0,e.Wm)("a",i,[u,(0,e.Wm)(s)]),k])]),b,(0,e.Wm)("p",null,[m,(0,e.Wm)("a",d,[h,(0,e.Wm)(s)]),g]),(0,e.Wm)("p",null,[(0,e.Wm)("a",w,[W,(0,e.Wm)(s)]),f]),y,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",x,[v,(0,e.Wm)(s)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",U,[j,(0,e.Wm)(s)]),_]),(0,e.Wm)("li",null,[(0,e.Wm)("a",q,[z,(0,e.Wm)(s)]),B]),(0,e.Wm)("li",null,[(0,e.Wm)("a",N,[E,(0,e.Wm)(s)]),K]),(0,e.Wm)("li",null,[(0,e.Wm)("a",P,[A,(0,e.Wm)(s)]),I])]),C,S,J,(0,e.Wm)("p",null,[(0,e.Wm)("a",O,[T,(0,e.Wm)(s)]),R,(0,e.Wm)("a",G,[H,(0,e.Wm)(s)]),L]),Y,(0,e.Wm)("p",null,[(0,e.Wm)("a",Z,[$,(0,e.Wm)(s)]),D]),(0,e.Wm)("p",null,[(0,e.Wm)("a",F,[M,(0,e.Wm)(s)]),Q]),V,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",X,[nn,(0,e.Wm)(s)]),an]),sn,(0,e.Wm)("li",null,[(0,e.Wm)("a",en,[pn,(0,e.Wm)(s)]),tn])]),rn,(0,e.Wm)("p",null,[(0,e.Wm)("a",ln,[cn,(0,e.Wm)(s)]),on,(0,e.Wm)("a",un,[kn,(0,e.Wm)(s)]),bn]),mn,dn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",hn,[gn,(0,e.Wm)(s)]),wn]),(0,e.Wm)("li",null,[(0,e.Wm)("a",Wn,[fn,(0,e.Wm)(s)]),yn]),(0,e.Wm)("li",null,[(0,e.Wm)("a",xn,[vn,(0,e.Wm)(s)]),Un])]),jn],64)}}}}]);