"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[3606],{3169:(s,n,a)=>{a.r(n),a.d(n,{data:()=>p});const p={key:"v-2ed9719f",path:"/courses/python/data-type.html",title:"Python 中的数据类型",lang:"zh-CN",frontmatter:{title:"Python 中的数据类型",description:"Python 中的基础数据类型，常见数据结构等",keywords:["Python"],date:"2021-09-03T00:00:00.000Z",key:1},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"数字类型",slug:"数字类型",children:[]},{level:2,title:"字符串",slug:"字符串",children:[]},{level:2,title:"列表",slug:"列表",children:[]},{level:2,title:"元组",slug:"元组",children:[]},{level:2,title:"集合",slug:"集合",children:[]},{level:2,title:"字典",slug:"字典",children:[]}],filePathRelative:"courses/python/data-type.md"}},5347:(s,n,a)=>{a.r(n),a.d(n,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="数字类型" tabindex="-1"><a class="header-anchor" href="#数字类型" aria-hidden="true">#</a> 数字类型</h2><p>Python 中有两种常见数字类型，整型（int）和浮点型（float），整型数之间运算结果为整型，整型与浮点型之间运算结果为浮点型。除法永远返回浮点型。</p><p>一般计算：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span> + <span class="token number">2</span>\n<span class="token number">4</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">50</span> - <span class="token number">5</span> * <span class="token number">6</span>\n<span class="token number">20</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">50</span> - <span class="token number">5</span> * <span class="token number">6</span><span class="token punctuation">)</span> / <span class="token number">4</span>\n<span class="token number">5.0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>除法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">8</span> / <span class="token number">5</span>\n<span class="token number">1.6</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">17</span> // <span class="token number">3</span>  <span class="token comment"># 取商</span>\n<span class="token number">5</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">17</span> % <span class="token number">3</span>  <span class="token comment"># 取余</span>\n<span class="token number">2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>阶乘：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">5</span> ** <span class="token number">2</span>\n<span class="token number">25</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span> ** <span class="token number">7</span>\n<span class="token number">128</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><p>字符串可以通过单引号（<code>&#39;</code>）或者双引号（<code>&quot;</code>）来表示，反斜线（<code>\\</code>）来转译字符。字符串是常量，即不可改。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;spam eggs&#39;</span>  <span class="token comment"># 单引号</span>\n<span class="token string">&#39;spam eggs&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;doesn\\&#39;</span>t<span class="token string">&#39;  # 转译字符\n&quot;doesn&#39;</span>t<span class="token string">&quot;\n&gt;&gt;&gt; &quot;</span>doesn<span class="token string">&#39;t&quot;  # 双引号\n&quot;doesn&#39;</span>t<span class="token string">&quot;\n&gt;&gt;&gt; &#39;&quot;</span>Yes,<span class="token string">&quot; they said.&#39;\n&#39;&quot;</span>Yes,<span class="token string">&quot; they said.&#39;\n&gt;&gt;&gt; &quot;</span><span class="token punctuation">\\</span>&quot;Yes,<span class="token punctuation">\\</span>&quot; they said.<span class="token string">&quot;\n&#39;&quot;</span>Yes,<span class="token string">&quot; they said.&#39;\n&gt;&gt;&gt; &#39;&quot;</span>Isn<span class="token punctuation">\\</span>&#39;t,<span class="token string">&quot; they said.&#39;\n&#39;&quot;</span>Isn<span class="token punctuation">\\</span>&#39;t,&quot; they said.&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>通常情况下，反斜线会被作为转译字符使用，如果我们要强制将其作为一般字符时，需要在字符串前面加一个 <code>r</code> 标记，表示这个字符串使用原始字符。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> print<span class="token punctuation">(</span><span class="token string">&#39;C:\\some\\name&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 这里 \\n 表示换行</span>\nC:<span class="token punctuation">\\</span>some\name\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> print<span class="token punctuation">(</span>r<span class="token string">&#39;C:\\some\\name&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 注意单引号前面的 r</span>\nC:<span class="token punctuation">\\</span>some<span class="token punctuation">\\</span>name\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>我们可以通过 <code>&quot;&quot;&quot;...&quot;&quot;&quot;</code> 和 <code>&#39;&#39;&#39;...&#39;&#39;&#39;</code> 来表示多行字符串，在多行字符串中每一行末尾的换行符会被保留。如果我们想去除某一行默认的换行符，可以在行末加一个反斜线。</p><p>下面的例子会省略初始的一个空行。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>print<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">\\</span>\nUsage: thingy <span class="token punctuation">[</span>OPTIONS<span class="token punctuation">]</span>\n     -h                        Display this usage message\n     -H <span class="token function">hostname</span>               Hostname to connect to\n<span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>通过数字和乘机符号，我们可以对字符串进行重复。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">3</span> * <span class="token string">&#39;un&#39;</span> + <span class="token string">&#39;ium&#39;</span>\n<span class="token string">&#39;unununium&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>两个相邻的字符串字面量可以直接拼接成一个新的字符串，但是字符串字面量和变量之间不行。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">&#39;Py&#39;</span> <span class="token string">&#39;thon&#39;</span>\n<span class="token string">&#39;Python&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>字符串支持索引，索引规则如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> +---+---+---+---+---+---+\n | P | y | t | h | o | n |\n +---+---+---+---+---+---+\n 0   1   2   3   4   5   6\n-6  -5  -4  -3  -2  -1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表</h2><p>列表可以用来保存一组数据，这些数据可以是同一种类型，也可以不同类型。列表支持索引，列表内的值可改。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">4</span>, <span class="token number">9</span>, <span class="token number">16</span>, <span class="token number">25</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares\n<span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">4</span>, <span class="token number">9</span>, <span class="token number">16</span>, <span class="token number">25</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 索引访问</span>\n<span class="token number">1</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares<span class="token punctuation">[</span>-1<span class="token punctuation">]</span>\n<span class="token number">25</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares<span class="token punctuation">[</span>-3:<span class="token punctuation">]</span>  <span class="token comment"># 返回新的列表</span>\n<span class="token punctuation">[</span><span class="token number">9</span>, <span class="token number">16</span>, <span class="token number">25</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>通过 <code>+</code> 连接两个列表，可以返回一个新的列表：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares + <span class="token punctuation">[</span><span class="token number">36</span>, <span class="token number">49</span>, <span class="token number">64</span>, <span class="token number">81</span>, <span class="token number">100</span><span class="token punctuation">]</span>\n<span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">4</span>, <span class="token number">9</span>, <span class="token number">16</span>, <span class="token number">25</span>, <span class="token number">36</span>, <span class="token number">49</span>, <span class="token number">64</span>, <span class="token number">81</span>, <span class="token number">100</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们可以通过索引对列表进行操作：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span>, <span class="token string">&#39;d&#39;</span>, <span class="token string">&#39;e&#39;</span>, <span class="token string">&#39;f&#39;</span>, <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters\n<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span>, <span class="token string">&#39;d&#39;</span>, <span class="token string">&#39;e&#39;</span>, <span class="token string">&#39;f&#39;</span>, <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># 替换一些值</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters<span class="token punctuation">[</span><span class="token number">2</span>:5<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;C&#39;</span>, <span class="token string">&#39;D&#39;</span>, <span class="token string">&#39;E&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters\n<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;C&#39;</span>, <span class="token string">&#39;D&#39;</span>, <span class="token string">&#39;E&#39;</span>, <span class="token string">&#39;f&#39;</span>, <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># 删除一些值</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters<span class="token punctuation">[</span><span class="token number">2</span>:5<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters\n<span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;f&#39;</span>, <span class="token string">&#39;g&#39;</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># 清空列表</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters<span class="token punctuation">[</span>:<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> letters\n<span class="token punctuation">[</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>列表还支持简写方式：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>squares <span class="token operator">=</span> <span class="token punctuation">[</span>x**2 <span class="token keyword">for</span> <span class="token for-or-select variable">x</span> <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>等效于：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token for-or-select variable">x</span> <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>:\n<span class="token punctuation">..</span>.     squares.append<span class="token punctuation">(</span>x**2<span class="token punctuation">)</span>\n<span class="token punctuation">..</span>.\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares\n<span class="token punctuation">[</span><span class="token number">0</span>, <span class="token number">1</span>, <span class="token number">4</span>, <span class="token number">9</span>, <span class="token number">16</span>, <span class="token number">25</span>, <span class="token number">36</span>, <span class="token number">49</span>, <span class="token number">64</span>, <span class="token number">81</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>更复杂一点的例子：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>x, y<span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token for-or-select variable">x</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1,2</span>,3<span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token for-or-select variable">y</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">3,1</span>,4<span class="token punctuation">]</span> <span class="token keyword">if</span> x <span class="token operator">!=</span> y<span class="token punctuation">]</span>\n<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">3</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">4</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">2</span>, <span class="token number">1</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">2</span>, <span class="token number">4</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">3</span>, <span class="token number">1</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token number">3</span>, <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="元组" tabindex="-1"><a class="header-anchor" href="#元组" aria-hidden="true">#</a> 元组</h2><p>元组（tuple）是由一组逗号分割的值组成的。元组内的值不能修改。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> t <span class="token operator">=</span> <span class="token number">12345</span>, <span class="token number">54321</span>, <span class="token string">&#39;hello!&#39;</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n<span class="token number">12345</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> t\n<span class="token punctuation">(</span><span class="token number">12345</span>, <span class="token number">54321</span>, <span class="token string">&#39;hello!&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token function">v</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>, <span class="token punctuation">[</span><span class="token number">3</span>, <span class="token number">2</span>, <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token function">v</span>\n<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span><span class="token punctuation">]</span>, <span class="token punctuation">[</span><span class="token number">3</span>, <span class="token number">2</span>, <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>通过如下方式可以对元组进行解构：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x, y, z <span class="token operator">=</span> t\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="集合" tabindex="-1"><a class="header-anchor" href="#集合" aria-hidden="true">#</a> 集合</h2><p>集合（set）中保存的是一组无序但唯一的值。注意，空集合需要使用 <code>set()</code>，因为 <code>{}</code> 表示一个空字典（dict）。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> basket <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;apple&#39;</span>, <span class="token string">&#39;orange&#39;</span>, <span class="token string">&#39;apple&#39;</span>, <span class="token string">&#39;pear&#39;</span>, <span class="token string">&#39;orange&#39;</span>, <span class="token string">&#39;banana&#39;</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> print<span class="token punctuation">(</span>basket<span class="token punctuation">)</span>   <span class="token comment"># 重复项已经被删除</span>\n<span class="token punctuation">{</span><span class="token string">&#39;orange&#39;</span>, <span class="token string">&#39;banana&#39;</span>, <span class="token string">&#39;pear&#39;</span>, <span class="token string">&#39;apple&#39;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>集合运算：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token string">&#39;abracadabra&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> b <span class="token operator">=</span> set<span class="token punctuation">(</span><span class="token string">&#39;alacazam&#39;</span><span class="token punctuation">)</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;r&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;c&#39;</span>, <span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a - b  <span class="token comment"># 在 a 中但是不在 b 中的字母</span>\n<span class="token punctuation">{</span><span class="token string">&#39;r&#39;</span>, <span class="token string">&#39;d&#39;</span>, <span class="token string">&#39;b&#39;</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">|</span> b  <span class="token comment"># 在 a 中活在 b 中的字母</span>\n<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;c&#39;</span>, <span class="token string">&#39;r&#39;</span>, <span class="token string">&#39;d&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;m&#39;</span>, <span class="token string">&#39;z&#39;</span>, <span class="token string">&#39;l&#39;</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">&amp;</span> b  <span class="token comment"># 即在 a 中又在 b 中的字母</span>\n<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span>, <span class="token string">&#39;c&#39;</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a ^ b  <span class="token comment"># 在 a 或者 b 中，但又不同时在 a 和 b 中</span>\n<span class="token punctuation">{</span><span class="token string">&#39;r&#39;</span>, <span class="token string">&#39;d&#39;</span>, <span class="token string">&#39;b&#39;</span>, <span class="token string">&#39;m&#39;</span>, <span class="token string">&#39;z&#39;</span>, <span class="token string">&#39;l&#39;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>与列表相似，集合也支持简写方式：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>x <span class="token keyword">for</span> <span class="token for-or-select variable">x</span> <span class="token keyword">in</span> <span class="token string">&#39;abracadabra&#39;</span> <span class="token keyword">if</span> x not <span class="token keyword">in</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> a\n<span class="token punctuation">{</span><span class="token string">&#39;r&#39;</span>, <span class="token string">&#39;d&#39;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="字典" tabindex="-1"><a class="header-anchor" href="#字典" aria-hidden="true">#</a> 字典</h2><p>字典用于存储一组键值对。key 可以是任何不可变的数据。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tel <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;jack&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4098</span>, <span class="token string">&#39;sape&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4139</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tel<span class="token punctuation">[</span><span class="token string">&#39;guido&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4127</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tel\n<span class="token punctuation">{</span><span class="token string">&#39;jack&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4098</span>, <span class="token string">&#39;sape&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4139</span>, <span class="token string">&#39;guido&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4127</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tel<span class="token punctuation">[</span><span class="token string">&#39;jack&#39;</span><span class="token punctuation">]</span>\n<span class="token number">4098</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tel<span class="token punctuation">[</span><span class="token string">&#39;irv&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4127</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tel\n<span class="token punctuation">{</span><span class="token string">&#39;jack&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4098</span>, <span class="token string">&#39;guido&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4127</span>, <span class="token string">&#39;irv&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4127</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>可以通过 <code>dict()</code> 构造函数来创建字典：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> dict<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&#39;sape&#39;</span>, <span class="token number">4139</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token string">&#39;guido&#39;</span>, <span class="token number">4127</span><span class="token punctuation">)</span>, <span class="token punctuation">(</span><span class="token string">&#39;jack&#39;</span>, <span class="token number">4098</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span><span class="token string">&#39;sape&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4139</span>, <span class="token string">&#39;guido&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4127</span>, <span class="token string">&#39;jack&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4098</span><span class="token punctuation">}</span>\n<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> dict<span class="token punctuation">(</span>sape<span class="token operator">=</span><span class="token number">4139</span>, <span class="token assign-left variable">guido</span><span class="token operator">=</span><span class="token number">4127</span>, <span class="token assign-left variable">jack</span><span class="token operator">=</span><span class="token number">4098</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span><span class="token string">&#39;sape&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4139</span>, <span class="token string">&#39;guido&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4127</span>, <span class="token string">&#39;jack&#39;</span><span class="token builtin class-name">:</span> <span class="token number">4098</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>字典也支持简写形式：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>x: x**2 <span class="token keyword">for</span> <span class="token for-or-select variable">x</span> <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">2</span>, <span class="token number">4</span>, <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token number">2</span>: <span class="token number">4</span>, <span class="token number">4</span>: <span class="token number">16</span>, <span class="token number">6</span>: <span class="token number">36</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',55),e={render:function(s,n){return p}}}}]);