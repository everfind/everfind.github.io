"use strict";(self.webpackChunkeverfind_website=self.webpackChunkeverfind_website||[]).push([[8235],{9263:(a,e,n)=>{n.r(e),n.d(e,{data:()=>s});const s={key:"v-d53e79bc",path:"/courses/webpack/deployment.html",title:"部署应用",lang:"zh-CN",frontmatter:{title:"部署应用",description:"介绍 Webpack 中如何部署应用",keywords:["Webpack"],date:"2021-02-02T00:00:00.000Z",key:31},excerpt:'<div style="display:flex;align-items:center;justify-content:center;"><p style="text-align: center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />关注微信公众号，获取最新推送~</p><p style="text-align: center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;" />加微信，深入交流~</p></div>',headers:[{level:2,title:"部署到 Github Pages",slug:"部署到-github-pages",children:[]},{level:2,title:"部署到其他环境",slug:"部署到其他环境",children:[]},{level:2,title:"动态修改 output.publicPath",slug:"动态修改-output-publicpath",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"courses/webpack/deployment.md"}},3367:(a,e,n)=>{n.r(e),n.d(e,{default:()=>_});var s=n(6252);const p=(0,s.Wm)("p",null,"Webpack 可以与一些插件配合，将构建好的应用部署到各种环境中。",-1),t=(0,s.Wm)("h2",{id:"部署到-github-pages",tabindex:"-1"},[(0,s.Wm)("a",{class:"header-anchor",href:"#部署到-github-pages","aria-hidden":"true"},"#"),(0,s.Uk)(" 部署到 Github Pages")],-1),c=(0,s.Uk)("GitHub Pages 是一个非常流行的静态网站托管平台。"),l={href:"https://www.npmjs.com/package/gh-pages",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("gh-pages"),i=(0,s.Uk)(" 这个工具可以帮助我们快速的将静态网站部署到 GitHub Pages 上。"),r=(0,s.uE)('<p>我们先安装 gh-pages</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">add</span> gh-pages --develop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>package.json</strong></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;deploy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gh-pages -d dist&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>GitHub Pages 对于托管的静态网站有一些规则约定，我们需要修改 <code>output.publicPath</code>，是的能正确的加载静态资源。如果不设置 <code>publicPath</code> 的话，默认会从网站根目录加载静态资源。</p><p><code>publicPath</code> 可以帮助我们控制应用从哪里加载静态资源。如果我们将静态资源都托管在 CDN 上，则 <code>publicPath</code> 应该调整为 CDN 上资源的存放地址。</p><p>在我们的例子中，我们设置如下：</p><p><strong>webpack.config.js</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> productionConfig <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    output<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// publicPath: &quot;/&quot;,</span>\n      <span class="token comment">// 将 publicPath 修改为项目名称</span>\n      publicPath<span class="token operator">:</span> <span class="token string">&quot;/webpack-demo/&quot;</span><span class="token punctuation">,</span>\n\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token operator">...</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>执行 <code>npm run build</code> 和 <code>npm run deploy</code> 之后，我们就将项目的 <code>/dist</code> 目录部署到了 GitHub Pages 上，通过 <code>https://&lt;name&gt;.github.io/&lt;project&gt;</code> 就可以访问到我们的静态站点内容。</p><h2 id="部署到其他环境" tabindex="-1"><a class="header-anchor" href="#部署到其他环境" aria-hidden="true">#</a> 部署到其他环境</h2><p>除了使用工具部署应用，我们还可以借助于 Webpack 来部署。</p>',12),u={href:"https://www.npmjs.com/package/webpack-deploy",target:"_blank",rel:"noopener noreferrer"},d=(0,s.Uk)("webpack-deploy"),b=(0,s.Uk)(" 是一个部署工具集合，本身可以脱离 Webpack 独立使用。"),g={href:"https://www.npmjs.com/package/webpack-s3-plugin",target:"_blank",rel:"noopener noreferrer"},h=(0,s.Uk)("webpack-s3-plugin"),k=(0,s.Uk)(" 将资源部署到 Amazon。"),m={href:"https://www.npmjs.com/package/ssh-webpack-plugin",target:"_blank",rel:"noopener noreferrer"},w=(0,s.Uk)("ssh-webpack-plugin"),y=(0,s.Uk)(" 通过 SSH 协议来部署资源。"),x=(0,s.uE)('<h2 id="动态修改-output-publicpath" tabindex="-1"><a class="header-anchor" href="#动态修改-output-publicpath" aria-hidden="true">#</a> 动态修改 <code>output.publicPath</code></h2><p>有些时候，<code>output.publicPath</code> 我们无法预先确定，也就无法写在配置文件里。我们可以通过下面的方法在应用代码中指定。</p><ol><li>在应用的入口添加 <code>__webpack_public_path__ = window.myDynamicPublicPath;</code>，在合适的时候给这个变量赋值。</li><li>将 Webpack 配置中的 <code>output.publicPath</code> 删除。</li><li>如果使用了 ESLint，那么需要添加全局变量声明，避免静态检查错误。<code>globals.__webpack_public_path__: true</code>。</li></ol><p>当构建的时候， Webpack 会使用 <code>__webpack_public_path__</code> 来加载模块。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>尽管 Webpack 不是一个部署工具，但通过一些插件，Webpack 可以实现部署的功能。</p><p>我们可以动态的修改 <code>output.publicPath</code> 配置来在非编译期确定静态资源的地址。这个方法内部是基于 <code>__webpack_public_path__</code> 这个全局变量来实现的。</p><div style="display:flex;align-items:center;justify-content:center;"><p style="text-align:center;margin-top:10px;color:#999;"><img src="/qrcode-c.jpg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">关注微信公众号，获取最新推送~</p><p style="text-align:center;margin-top:10px;color:#999;"><img src="/card-c.jpeg" style="width:200px;height:200px;display:block;margin:10px auto;opacity:0.8;">加微信，深入交流~</p></div>',8),_={render:function(a,e){const n=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[p,t,(0,s.Wm)("p",null,[c,(0,s.Wm)("a",l,[o,(0,s.Wm)(n)]),i]),r,(0,s.Wm)("ul",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",u,[d,(0,s.Wm)(n)]),b]),(0,s.Wm)("li",null,[(0,s.Wm)("a",g,[h,(0,s.Wm)(n)]),k]),(0,s.Wm)("li",null,[(0,s.Wm)("a",m,[w,(0,s.Wm)(n)]),y])]),x],64)}}}}]);